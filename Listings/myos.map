Component: Arm Compiler for Embedded 6.22 Tool: armlink [5ee90200]

==============================================================================

Section Cross References

    main.o(.text.tTaskHighestReady) refers to main.o(.bss.taskPrioBitmap) for taskPrioBitmap
    main.o(.text.tTaskHighestReady) refers to tbitmap.o(.text.tBitmapGetFirstSet) for tBitmapGetFirstSet
    main.o(.text.tTaskHighestReady) refers to main.o(.bss.taskTable) for taskTable
    main.o(.text.tTaskHighestReady) refers to tlist.o(.text.tListFirst) for tListFirst
    main.o(.ARM.exidx.text.tTaskHighestReady) refers to main.o(.text.tTaskHighestReady) for [Anonymous Symbol]
    main.o(.text.tTaskSchedInit) refers to main.o(.bss.schedLockCount) for schedLockCount
    main.o(.text.tTaskSchedInit) refers to main.o(.bss.taskTable) for taskTable
    main.o(.text.tTaskSchedInit) refers to tlist.o(.text.tListInit) for tListInit
    main.o(.ARM.exidx.text.tTaskSchedInit) refers to main.o(.text.tTaskSchedInit) for [Anonymous Symbol]
    main.o(.text.tTaskSchedDisable) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    main.o(.text.tTaskSchedDisable) refers to main.o(.bss.schedLockCount) for schedLockCount
    main.o(.text.tTaskSchedDisable) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    main.o(.ARM.exidx.text.tTaskSchedDisable) refers to main.o(.text.tTaskSchedDisable) for [Anonymous Symbol]
    main.o(.text.tTaskSchedEnable) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    main.o(.text.tTaskSchedEnable) refers to main.o(.bss.schedLockCount) for schedLockCount
    main.o(.text.tTaskSchedEnable) refers to main.o(.text.tTaskSched) for tTaskSched
    main.o(.text.tTaskSchedEnable) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    main.o(.ARM.exidx.text.tTaskSchedEnable) refers to main.o(.text.tTaskSchedEnable) for [Anonymous Symbol]
    main.o(.text.tTaskSched) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    main.o(.text.tTaskSched) refers to main.o(.bss.schedLockCount) for schedLockCount
    main.o(.text.tTaskSched) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    main.o(.text.tTaskSched) refers to main.o(.text.tTaskHighestReady) for tTaskHighestReady
    main.o(.text.tTaskSched) refers to main.o(.bss.currentTask) for currentTask
    main.o(.text.tTaskSched) refers to main.o(.bss.nextTask) for nextTask
    main.o(.text.tTaskSched) refers to switch.o(.text.tTaskSwitch) for tTaskSwitch
    main.o(.ARM.exidx.text.tTaskSched) refers to main.o(.text.tTaskSched) for [Anonymous Symbol]
    main.o(.text.tTaskSchedRdy) refers to main.o(.bss.taskTable) for taskTable
    main.o(.text.tTaskSchedRdy) refers to tlist.o(.text.tListAddLast) for tListAddLast
    main.o(.text.tTaskSchedRdy) refers to main.o(.bss.taskPrioBitmap) for taskPrioBitmap
    main.o(.text.tTaskSchedRdy) refers to tbitmap.o(.text.tBitmapSet) for tBitmapSet
    main.o(.ARM.exidx.text.tTaskSchedRdy) refers to main.o(.text.tTaskSchedRdy) for [Anonymous Symbol]
    main.o(.text.tTaskSchedUnRdy) refers to main.o(.bss.taskTable) for taskTable
    main.o(.text.tTaskSchedUnRdy) refers to tlist.o(.text.tListRemove) for tListRemove
    main.o(.text.tTaskSchedUnRdy) refers to tlist.o(.text.tListCount) for tListCount
    main.o(.text.tTaskSchedUnRdy) refers to main.o(.bss.taskPrioBitmap) for taskPrioBitmap
    main.o(.text.tTaskSchedUnRdy) refers to tbitmap.o(.text.tBitmapClear) for tBitmapClear
    main.o(.ARM.exidx.text.tTaskSchedUnRdy) refers to main.o(.text.tTaskSchedUnRdy) for [Anonymous Symbol]
    main.o(.text.tTaskSchedRemove) refers to main.o(.bss.taskTable) for taskTable
    main.o(.text.tTaskSchedRemove) refers to tlist.o(.text.tListRemove) for tListRemove
    main.o(.text.tTaskSchedRemove) refers to tlist.o(.text.tListCount) for tListCount
    main.o(.text.tTaskSchedRemove) refers to main.o(.bss.taskPrioBitmap) for taskPrioBitmap
    main.o(.text.tTaskSchedRemove) refers to tbitmap.o(.text.tBitmapClear) for tBitmapClear
    main.o(.ARM.exidx.text.tTaskSchedRemove) refers to main.o(.text.tTaskSchedRemove) for [Anonymous Symbol]
    main.o(.text.tTaskDelayedInit) refers to main.o(.bss.tTaskDelayedList) for tTaskDelayedList
    main.o(.text.tTaskDelayedInit) refers to tlist.o(.text.tListInit) for tListInit
    main.o(.ARM.exidx.text.tTaskDelayedInit) refers to main.o(.text.tTaskDelayedInit) for [Anonymous Symbol]
    main.o(.text.tTimeTaskWait) refers to main.o(.bss.tTaskDelayedList) for tTaskDelayedList
    main.o(.text.tTimeTaskWait) refers to tlist.o(.text.tListAddLast) for tListAddLast
    main.o(.ARM.exidx.text.tTimeTaskWait) refers to main.o(.text.tTimeTaskWait) for [Anonymous Symbol]
    main.o(.text.tTimeTaskWakeUp) refers to main.o(.bss.tTaskDelayedList) for tTaskDelayedList
    main.o(.text.tTimeTaskWakeUp) refers to tlist.o(.text.tListRemove) for tListRemove
    main.o(.ARM.exidx.text.tTimeTaskWakeUp) refers to main.o(.text.tTimeTaskWakeUp) for [Anonymous Symbol]
    main.o(.text.tTimeTaskRemove) refers to main.o(.bss.tTaskDelayedList) for tTaskDelayedList
    main.o(.text.tTimeTaskRemove) refers to tlist.o(.text.tListRemove) for tListRemove
    main.o(.ARM.exidx.text.tTimeTaskRemove) refers to main.o(.text.tTimeTaskRemove) for [Anonymous Symbol]
    main.o(.text.tTimeTickInit) refers to main.o(.bss.tickCount) for tickCount
    main.o(.ARM.exidx.text.tTimeTickInit) refers to main.o(.text.tTimeTickInit) for [Anonymous Symbol]
    main.o(.text.tTaskSystemTickHandler) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    main.o(.text.tTaskSystemTickHandler) refers to main.o(.bss.tTaskDelayedList) for tTaskDelayedList
    main.o(.text.tTaskSystemTickHandler) refers to tevent.o(.text.tEventRemoveTask) for tEventRemoveTask
    main.o(.text.tTaskSystemTickHandler) refers to main.o(.text.tTimeTaskWakeUp) for tTimeTaskWakeUp
    main.o(.text.tTaskSystemTickHandler) refers to main.o(.text.tTaskSchedRdy) for tTaskSchedRdy
    main.o(.text.tTaskSystemTickHandler) refers to main.o(.bss.currentTask) for currentTask
    main.o(.text.tTaskSystemTickHandler) refers to main.o(.bss.taskTable) for taskTable
    main.o(.text.tTaskSystemTickHandler) refers to tlist.o(.text.tListCount) for tListCount
    main.o(.text.tTaskSystemTickHandler) refers to tlist.o(.text.tListRemoveFirst) for tListRemoveFirst
    main.o(.text.tTaskSystemTickHandler) refers to tlist.o(.text.tListAddLast) for tListAddLast
    main.o(.text.tTaskSystemTickHandler) refers to main.o(.bss.tickCount) for tickCount
    main.o(.text.tTaskSystemTickHandler) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    main.o(.text.tTaskSystemTickHandler) refers to main.o(.text.tTaskSched) for tTaskSched
    main.o(.ARM.exidx.text.tTaskSystemTickHandler) refers to main.o(.text.tTaskSystemTickHandler) for [Anonymous Symbol]
    main.o(.text.idleTaskEntry) refers to main.o(.text.tTaskSchedDisable) for tTaskSchedDisable
    main.o(.text.idleTaskEntry) refers to app.o(.text.tInitApp) for tInitApp
    main.o(.text.idleTaskEntry) refers to tcpu.o(.text.tSetSysTickPeriod) for tSetSysTickPeriod
    main.o(.text.idleTaskEntry) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    main.o(.text.idleTaskEntry) refers to main.o(.bss.idleCount) for idleCount
    main.o(.text.idleTaskEntry) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    main.o(.ARM.exidx.text.idleTaskEntry) refers to main.o(.text.idleTaskEntry) for [Anonymous Symbol]
    main.o(.text.main) refers to main.o(.text.tTaskSchedInit) for tTaskSchedInit
    main.o(.text.main) refers to main.o(.text.tTaskDelayedInit) for tTaskDelayedInit
    main.o(.text.main) refers to main.o(.text.tTimeTickInit) for tTimeTickInit
    main.o(.text.main) refers to main.o(.bss.idleTaskEnv) for idleTaskEnv
    main.o(.text.main) refers to main.o(.bss.tTaskIdle) for tTaskIdle
    main.o(.text.main) refers to main.o(.text.idleTaskEntry) for idleTaskEntry
    main.o(.text.main) refers to ttask.o(.text.tTaskInit) for tTaskInit
    main.o(.text.main) refers to main.o(.text.tTaskHighestReady) for tTaskHighestReady
    main.o(.text.main) refers to main.o(.bss.nextTask) for nextTask
    main.o(.text.main) refers to switch.o(.text.tTaskRunFirst) for tTaskRunFirst
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    app.o(.text.task1Entry) refers to app.o(.bss.task1Flag) for task1Flag
    app.o(.text.task1Entry) refers to ttime.o(.text.tTaskDelay) for tTaskDelay
    app.o(.ARM.exidx.text.task1Entry) refers to app.o(.text.task1Entry) for [Anonymous Symbol]
    app.o(.text.task2Entry) refers to app.o(.bss.task2Flag) for task2Flag
    app.o(.text.task2Entry) refers to ttime.o(.text.tTaskDelay) for tTaskDelay
    app.o(.ARM.exidx.text.task2Entry) refers to app.o(.text.task2Entry) for [Anonymous Symbol]
    app.o(.text.task3Entry) refers to app.o(.bss.task3Flag) for task3Flag
    app.o(.text.task3Entry) refers to ttime.o(.text.tTaskDelay) for tTaskDelay
    app.o(.ARM.exidx.text.task3Entry) refers to app.o(.text.task3Entry) for [Anonymous Symbol]
    app.o(.text.tInitApp) refers to app.o(.bss.task1Env) for task1Env
    app.o(.text.tInitApp) refers to app.o(.bss.tTask1) for tTask1
    app.o(.text.tInitApp) refers to app.o(.text.task1Entry) for task1Entry
    app.o(.text.tInitApp) refers to ttask.o(.text.tTaskInit) for tTaskInit
    app.o(.text.tInitApp) refers to app.o(.bss.task2Env) for task2Env
    app.o(.text.tInitApp) refers to app.o(.bss.tTask2) for tTask2
    app.o(.text.tInitApp) refers to app.o(.text.task2Entry) for task2Entry
    app.o(.text.tInitApp) refers to app.o(.bss.task3Env) for task3Env
    app.o(.text.tInitApp) refers to app.o(.bss.tTask3) for tTask3
    app.o(.text.tInitApp) refers to app.o(.text.task3Entry) for task3Entry
    app.o(.ARM.exidx.text.tInitApp) refers to app.o(.text.tInitApp) for [Anonymous Symbol]
    cortex.o(.text) refers to main.o(.bss.currentTask) for currentTask
    cortex.o(.text) refers to main.o(.bss.nextTask) for nextTask
    switch.o(.ARM.exidx.text.tTaskEnterCritical) refers to switch.o(.text.tTaskEnterCritical) for [Anonymous Symbol]
    switch.o(.ARM.exidx.text.tTaskExitCritical) refers to switch.o(.text.tTaskExitCritical) for [Anonymous Symbol]
    switch.o(.ARM.exidx.text.tTaskRunFirst) refers to switch.o(.text.tTaskRunFirst) for [Anonymous Symbol]
    switch.o(.ARM.exidx.text.tTaskSwitch) refers to switch.o(.text.tTaskSwitch) for [Anonymous Symbol]
    tbitmap.o(.ARM.exidx.text.tBitmapInit) refers to tbitmap.o(.text.tBitmapInit) for [Anonymous Symbol]
    tbitmap.o(.ARM.exidx.text.tBitmapPosCount) refers to tbitmap.o(.text.tBitmapPosCount) for [Anonymous Symbol]
    tbitmap.o(.ARM.exidx.text.tBitmapSet) refers to tbitmap.o(.text.tBitmapSet) for [Anonymous Symbol]
    tbitmap.o(.ARM.exidx.text.tBitmapClear) refers to tbitmap.o(.text.tBitmapClear) for [Anonymous Symbol]
    tbitmap.o(.text.tBitmapGetFirstSet) refers to tbitmap.o(.rodata.tBitmapGetFirstSet.quickFindTable) for tBitmapGetFirstSet.quickFindTable
    tbitmap.o(.text.tBitmapGetFirstSet) refers to tbitmap.o(.text.tBitmapPosCount) for tBitmapPosCount
    tbitmap.o(.ARM.exidx.text.tBitmapGetFirstSet) refers to tbitmap.o(.text.tBitmapGetFirstSet) for [Anonymous Symbol]
    tlist.o(.ARM.exidx.text.tNodeInit) refers to tlist.o(.text.tNodeInit) for [Anonymous Symbol]
    tlist.o(.ARM.exidx.text.tListInit) refers to tlist.o(.text.tListInit) for [Anonymous Symbol]
    tlist.o(.ARM.exidx.text.tListCount) refers to tlist.o(.text.tListCount) for [Anonymous Symbol]
    tlist.o(.ARM.exidx.text.tListFirst) refers to tlist.o(.text.tListFirst) for [Anonymous Symbol]
    tlist.o(.ARM.exidx.text.tListLast) refers to tlist.o(.text.tListLast) for [Anonymous Symbol]
    tlist.o(.ARM.exidx.text.tListPpre) refers to tlist.o(.text.tListPpre) for [Anonymous Symbol]
    tlist.o(.ARM.exidx.text.tListNext) refers to tlist.o(.text.tListNext) for [Anonymous Symbol]
    tlist.o(.ARM.exidx.text.tListRemoveAll) refers to tlist.o(.text.tListRemoveAll) for [Anonymous Symbol]
    tlist.o(.ARM.exidx.text.tListAddFirst) refers to tlist.o(.text.tListAddFirst) for [Anonymous Symbol]
    tlist.o(.ARM.exidx.text.tListAddLast) refers to tlist.o(.text.tListAddLast) for [Anonymous Symbol]
    tlist.o(.ARM.exidx.text.tListRemoveFirst) refers to tlist.o(.text.tListRemoveFirst) for [Anonymous Symbol]
    tlist.o(.ARM.exidx.text.tListInsertAfter) refers to tlist.o(.text.tListInsertAfter) for [Anonymous Symbol]
    tlist.o(.ARM.exidx.text.tListRemove) refers to tlist.o(.text.tListRemove) for [Anonymous Symbol]
    ttask.o(.text.tTaskInit) refers to memseta.o(.text) for __aeabi_memclr4
    ttask.o(.text.tTaskInit) refers to tlist.o(.text.tNodeInit) for tNodeInit
    ttask.o(.text.tTaskInit) refers to main.o(.text.tTaskSchedRdy) for tTaskSchedRdy
    ttask.o(.ARM.exidx.text.tTaskInit) refers to ttask.o(.text.tTaskInit) for [Anonymous Symbol]
    ttask.o(.text.tTaskSuspend) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    ttask.o(.text.tTaskSuspend) refers to main.o(.text.tTaskSchedUnRdy) for tTaskSchedUnRdy
    ttask.o(.text.tTaskSuspend) refers to main.o(.bss.currentTask) for currentTask
    ttask.o(.text.tTaskSuspend) refers to main.o(.text.tTaskSched) for tTaskSched
    ttask.o(.text.tTaskSuspend) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    ttask.o(.ARM.exidx.text.tTaskSuspend) refers to ttask.o(.text.tTaskSuspend) for [Anonymous Symbol]
    ttask.o(.text.tTaskWakeUp) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    ttask.o(.text.tTaskWakeUp) refers to main.o(.text.tTaskSchedRdy) for tTaskSchedRdy
    ttask.o(.text.tTaskWakeUp) refers to main.o(.text.tTaskSched) for tTaskSched
    ttask.o(.text.tTaskWakeUp) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    ttask.o(.ARM.exidx.text.tTaskWakeUp) refers to ttask.o(.text.tTaskWakeUp) for [Anonymous Symbol]
    ttask.o(.ARM.exidx.text.tTaskSetCleanCallFun) refers to ttask.o(.text.tTaskSetCleanCallFun) for [Anonymous Symbol]
    ttask.o(.text.tTaskForceDelete) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    ttask.o(.text.tTaskForceDelete) refers to main.o(.text.tTimeTaskRemove) for tTimeTaskRemove
    ttask.o(.text.tTaskForceDelete) refers to main.o(.text.tTaskSchedRemove) for tTaskSchedRemove
    ttask.o(.text.tTaskForceDelete) refers to main.o(.bss.currentTask) for currentTask
    ttask.o(.text.tTaskForceDelete) refers to main.o(.text.tTaskSched) for tTaskSched
    ttask.o(.text.tTaskForceDelete) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    ttask.o(.ARM.exidx.text.tTaskForceDelete) refers to ttask.o(.text.tTaskForceDelete) for [Anonymous Symbol]
    ttask.o(.text.tTaskRequestDelete) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    ttask.o(.text.tTaskRequestDelete) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    ttask.o(.ARM.exidx.text.tTaskRequestDelete) refers to ttask.o(.text.tTaskRequestDelete) for [Anonymous Symbol]
    ttask.o(.text.tTaskIsRequestedDeleted) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    ttask.o(.text.tTaskIsRequestedDeleted) refers to main.o(.bss.currentTask) for currentTask
    ttask.o(.text.tTaskIsRequestedDeleted) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    ttask.o(.ARM.exidx.text.tTaskIsRequestedDeleted) refers to ttask.o(.text.tTaskIsRequestedDeleted) for [Anonymous Symbol]
    ttask.o(.text.tTaskDeleteSelf) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    ttask.o(.text.tTaskDeleteSelf) refers to main.o(.bss.currentTask) for currentTask
    ttask.o(.text.tTaskDeleteSelf) refers to main.o(.text.tTaskSchedRemove) for tTaskSchedRemove
    ttask.o(.text.tTaskDeleteSelf) refers to main.o(.text.tTaskSched) for tTaskSched
    ttask.o(.text.tTaskDeleteSelf) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    ttask.o(.ARM.exidx.text.tTaskDeleteSelf) refers to ttask.o(.text.tTaskDeleteSelf) for [Anonymous Symbol]
    ttask.o(.text.tTaskGetInfo) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    ttask.o(.text.tTaskGetInfo) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    ttask.o(.ARM.exidx.text.tTaskGetInfo) refers to ttask.o(.text.tTaskGetInfo) for [Anonymous Symbol]
    ttime.o(.text.tTaskDelay) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    ttime.o(.text.tTaskDelay) refers to main.o(.bss.currentTask) for currentTask
    ttime.o(.text.tTaskDelay) refers to main.o(.text.tTimeTaskWait) for tTimeTaskWait
    ttime.o(.text.tTaskDelay) refers to main.o(.text.tTaskSchedUnRdy) for tTaskSchedUnRdy
    ttime.o(.text.tTaskDelay) refers to main.o(.text.tTaskSched) for tTaskSched
    ttime.o(.text.tTaskDelay) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    ttime.o(.ARM.exidx.text.tTaskDelay) refers to ttime.o(.text.tTaskDelay) for [Anonymous Symbol]
    tcpu.o(.text.tSetSysTickPeriod) refers to system_armcm3.o(.data.SystemCoreClock) for SystemCoreClock
    tcpu.o(.text.tSetSysTickPeriod) refers to tcpu.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    tcpu.o(.ARM.exidx.text.tSetSysTickPeriod) refers to tcpu.o(.text.tSetSysTickPeriod) for [Anonymous Symbol]
    tcpu.o(.ARM.exidx.text.__NVIC_SetPriority) refers to tcpu.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    tcpu.o(.text.SysTick_Handler) refers to main.o(.text.tTaskSystemTickHandler) for tTaskSystemTickHandler
    tcpu.o(.ARM.exidx.text.SysTick_Handler) refers to tcpu.o(.text.SysTick_Handler) for [Anonymous Symbol]
    tevent.o(.text.tEventInit) refers to tlist.o(.text.tListInit) for tListInit
    tevent.o(.ARM.exidx.text.tEventInit) refers to tevent.o(.text.tEventInit) for [Anonymous Symbol]
    tevent.o(.text.tEventWait) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tevent.o(.text.tEventWait) refers to main.o(.text.tTaskSchedUnRdy) for tTaskSchedUnRdy
    tevent.o(.text.tEventWait) refers to tlist.o(.text.tListAddLast) for tListAddLast
    tevent.o(.text.tEventWait) refers to main.o(.text.tTimeTaskWait) for tTimeTaskWait
    tevent.o(.text.tEventWait) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tevent.o(.ARM.exidx.text.tEventWait) refers to tevent.o(.text.tEventWait) for [Anonymous Symbol]
    tevent.o(.text.tEventWakeUp) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tevent.o(.text.tEventWakeUp) refers to tlist.o(.text.tListRemoveFirst) for tListRemoveFirst
    tevent.o(.text.tEventWakeUp) refers to main.o(.text.tTimeTaskWakeUp) for tTimeTaskWakeUp
    tevent.o(.text.tEventWakeUp) refers to main.o(.text.tTaskSchedRdy) for tTaskSchedRdy
    tevent.o(.text.tEventWakeUp) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tevent.o(.ARM.exidx.text.tEventWakeUp) refers to tevent.o(.text.tEventWakeUp) for [Anonymous Symbol]
    tevent.o(.text.tEventWakeUpTask) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tevent.o(.text.tEventWakeUpTask) refers to tlist.o(.text.tListRemove) for tListRemove
    tevent.o(.text.tEventWakeUpTask) refers to main.o(.text.tTimeTaskWakeUp) for tTimeTaskWakeUp
    tevent.o(.text.tEventWakeUpTask) refers to main.o(.text.tTaskSchedRdy) for tTaskSchedRdy
    tevent.o(.text.tEventWakeUpTask) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tevent.o(.ARM.exidx.text.tEventWakeUpTask) refers to tevent.o(.text.tEventWakeUpTask) for [Anonymous Symbol]
    tevent.o(.text.tEventRemoveTask) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tevent.o(.text.tEventRemoveTask) refers to tlist.o(.text.tListRemove) for tListRemove
    tevent.o(.text.tEventRemoveTask) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tevent.o(.ARM.exidx.text.tEventRemoveTask) refers to tevent.o(.text.tEventRemoveTask) for [Anonymous Symbol]
    tevent.o(.text.tEventRemoveAll) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tevent.o(.text.tEventRemoveAll) refers to tlist.o(.text.tListCount) for tListCount
    tevent.o(.text.tEventRemoveAll) refers to tlist.o(.text.tListRemoveFirst) for tListRemoveFirst
    tevent.o(.text.tEventRemoveAll) refers to main.o(.text.tTimeTaskWakeUp) for tTimeTaskWakeUp
    tevent.o(.text.tEventRemoveAll) refers to main.o(.text.tTaskSchedRdy) for tTaskSchedRdy
    tevent.o(.text.tEventRemoveAll) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tevent.o(.ARM.exidx.text.tEventRemoveAll) refers to tevent.o(.text.tEventRemoveAll) for [Anonymous Symbol]
    tevent.o(.text.tEventWaitCount) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tevent.o(.text.tEventWaitCount) refers to tlist.o(.text.tListCount) for tListCount
    tevent.o(.text.tEventWaitCount) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tevent.o(.ARM.exidx.text.tEventWaitCount) refers to tevent.o(.text.tEventWaitCount) for [Anonymous Symbol]
    startup_armcm3.o(.ARM.exidx.text.Default_Handler) refers to startup_armcm3.o(.text.Default_Handler) for [Anonymous Symbol]
    startup_armcm3.o(.text.Reset_Handler) refers to system_armcm3.o(.text.SystemInit) for SystemInit
    startup_armcm3.o(.text.Reset_Handler) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    startup_armcm3.o(.ARM.exidx.text.Reset_Handler) refers to startup_armcm3.o(.text.Reset_Handler) for [Anonymous Symbol]
    startup_armcm3.o(.ARM.exidx.text.HardFault_Handler) refers to startup_armcm3.o(.text.HardFault_Handler) for [Anonymous Symbol]
    startup_armcm3.o(RESET) refers to startup_armcm3.o(.text.Reset_Handler) for Reset_Handler
    startup_armcm3.o(RESET) refers to startup_armcm3.o(.text.Default_Handler) for NMI_Handler
    startup_armcm3.o(RESET) refers to startup_armcm3.o(.text.HardFault_Handler) for HardFault_Handler
    startup_armcm3.o(RESET) refers to cortex.o(.text) for PendSV_Handler
    startup_armcm3.o(RESET) refers to tcpu.o(.text.SysTick_Handler) for SysTick_Handler
    system_armcm3.o(.text.SystemCoreClockUpdate) refers to system_armcm3.o(.data.SystemCoreClock) for SystemCoreClock
    system_armcm3.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_armcm3.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_armcm3.o(.text.SystemInit) refers to startup_armcm3.o(RESET) for __Vectors
    system_armcm3.o(.text.SystemInit) refers to system_armcm3.o(.data.SystemCoreClock) for SystemCoreClock
    system_armcm3.o(.ARM.exidx.text.SystemInit) refers to system_armcm3.o(.text.SystemInit) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry4.o(.ARM.Collect$$$$00000003) for _main_stk
    entry4.o(.ARM.Collect$$$$00000003) refers to entry4.o(.ARM.Collect$$$$00002714) for __lit__00000000
    entry4.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.tTaskHighestReady), (8 bytes).
    Removing main.o(.ARM.exidx.text.tTaskSchedInit), (8 bytes).
    Removing main.o(.ARM.exidx.text.tTaskSchedDisable), (8 bytes).
    Removing main.o(.text.tTaskSchedEnable), (64 bytes).
    Removing main.o(.ARM.exidx.text.tTaskSchedEnable), (8 bytes).
    Removing main.o(.ARM.exidx.text.tTaskSched), (8 bytes).
    Removing main.o(.ARM.exidx.text.tTaskSchedRdy), (8 bytes).
    Removing main.o(.ARM.exidx.text.tTaskSchedUnRdy), (8 bytes).
    Removing main.o(.text.tTaskSchedRemove), (78 bytes).
    Removing main.o(.ARM.exidx.text.tTaskSchedRemove), (8 bytes).
    Removing main.o(.ARM.exidx.text.tTaskDelayedInit), (8 bytes).
    Removing main.o(.ARM.exidx.text.tTimeTaskWait), (8 bytes).
    Removing main.o(.ARM.exidx.text.tTimeTaskWakeUp), (8 bytes).
    Removing main.o(.text.tTimeTaskRemove), (28 bytes).
    Removing main.o(.ARM.exidx.text.tTimeTaskRemove), (8 bytes).
    Removing main.o(.ARM.exidx.text.tTimeTickInit), (8 bytes).
    Removing main.o(.ARM.exidx.text.tTaskSystemTickHandler), (8 bytes).
    Removing main.o(.ARM.exidx.text.idleTaskEntry), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.bss.idleTask), (4 bytes).
    Removing main.o(.bss.idleMaxCount), (4 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing app.o(.text), (0 bytes).
    Removing app.o(.ARM.exidx.text.task1Entry), (8 bytes).
    Removing app.o(.ARM.exidx.text.task2Entry), (8 bytes).
    Removing app.o(.ARM.exidx.text.task3Entry), (8 bytes).
    Removing app.o(.ARM.exidx.text.tInitApp), (8 bytes).
    Removing switch.o(.text), (0 bytes).
    Removing switch.o(.ARM.exidx.text.tTaskEnterCritical), (8 bytes).
    Removing switch.o(.ARM.exidx.text.tTaskExitCritical), (8 bytes).
    Removing switch.o(.ARM.exidx.text.tTaskRunFirst), (8 bytes).
    Removing switch.o(.ARM.exidx.text.tTaskSwitch), (8 bytes).
    Removing tbitmap.o(.text), (0 bytes).
    Removing tbitmap.o(.text.tBitmapInit), (14 bytes).
    Removing tbitmap.o(.ARM.exidx.text.tBitmapInit), (8 bytes).
    Removing tbitmap.o(.ARM.exidx.text.tBitmapPosCount), (8 bytes).
    Removing tbitmap.o(.ARM.exidx.text.tBitmapSet), (8 bytes).
    Removing tbitmap.o(.ARM.exidx.text.tBitmapClear), (8 bytes).
    Removing tbitmap.o(.ARM.exidx.text.tBitmapGetFirstSet), (8 bytes).
    Removing tlist.o(.text), (0 bytes).
    Removing tlist.o(.ARM.exidx.text.tNodeInit), (8 bytes).
    Removing tlist.o(.ARM.exidx.text.tListInit), (8 bytes).
    Removing tlist.o(.ARM.exidx.text.tListCount), (8 bytes).
    Removing tlist.o(.ARM.exidx.text.tListFirst), (8 bytes).
    Removing tlist.o(.text.tListLast), (30 bytes).
    Removing tlist.o(.ARM.exidx.text.tListLast), (8 bytes).
    Removing tlist.o(.text.tListPpre), (36 bytes).
    Removing tlist.o(.ARM.exidx.text.tListPpre), (8 bytes).
    Removing tlist.o(.text.tListNext), (36 bytes).
    Removing tlist.o(.ARM.exidx.text.tListNext), (8 bytes).
    Removing tlist.o(.text.tListRemoveAll), (70 bytes).
    Removing tlist.o(.ARM.exidx.text.tListRemoveAll), (8 bytes).
    Removing tlist.o(.text.tListAddFirst), (50 bytes).
    Removing tlist.o(.ARM.exidx.text.tListAddFirst), (8 bytes).
    Removing tlist.o(.ARM.exidx.text.tListAddLast), (8 bytes).
    Removing tlist.o(.ARM.exidx.text.tListRemoveFirst), (8 bytes).
    Removing tlist.o(.text.tListInsertAfter), (48 bytes).
    Removing tlist.o(.ARM.exidx.text.tListInsertAfter), (8 bytes).
    Removing tlist.o(.ARM.exidx.text.tListRemove), (8 bytes).
    Removing ttask.o(.text), (0 bytes).
    Removing ttask.o(.ARM.exidx.text.tTaskInit), (8 bytes).
    Removing ttask.o(.text.tTaskSuspend), (94 bytes).
    Removing ttask.o(.ARM.exidx.text.tTaskSuspend), (8 bytes).
    Removing ttask.o(.text.tTaskWakeUp), (72 bytes).
    Removing ttask.o(.ARM.exidx.text.tTaskWakeUp), (8 bytes).
    Removing ttask.o(.text.tTaskSetCleanCallFun), (24 bytes).
    Removing ttask.o(.ARM.exidx.text.tTaskSetCleanCallFun), (8 bytes).
    Removing ttask.o(.text.tTaskForceDelete), (110 bytes).
    Removing ttask.o(.ARM.exidx.text.tTaskForceDelete), (8 bytes).
    Removing ttask.o(.text.tTaskRequestDelete), (30 bytes).
    Removing ttask.o(.ARM.exidx.text.tTaskRequestDelete), (8 bytes).
    Removing ttask.o(.text.tTaskIsRequestedDeleted), (42 bytes).
    Removing ttask.o(.ARM.exidx.text.tTaskIsRequestedDeleted), (8 bytes).
    Removing ttask.o(.text.tTaskDeleteSelf), (68 bytes).
    Removing ttask.o(.ARM.exidx.text.tTaskDeleteSelf), (8 bytes).
    Removing ttask.o(.text.tTaskGetInfo), (146 bytes).
    Removing ttask.o(.ARM.exidx.text.tTaskGetInfo), (8 bytes).
    Removing ttime.o(.text), (0 bytes).
    Removing ttime.o(.ARM.exidx.text.tTaskDelay), (8 bytes).
    Removing tcpu.o(.text), (0 bytes).
    Removing tcpu.o(.ARM.exidx.text.tSetSysTickPeriod), (8 bytes).
    Removing tcpu.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing tcpu.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing tevent.o(.text), (0 bytes).
    Removing tevent.o(.text.tEventInit), (26 bytes).
    Removing tevent.o(.ARM.exidx.text.tEventInit), (8 bytes).
    Removing tevent.o(.text.tEventWait), (90 bytes).
    Removing tevent.o(.ARM.exidx.text.tEventWait), (8 bytes).
    Removing tevent.o(.text.tEventWakeUp), (104 bytes).
    Removing tevent.o(.ARM.exidx.text.tEventWakeUp), (8 bytes).
    Removing tevent.o(.text.tEventWakeUpTask), (90 bytes).
    Removing tevent.o(.ARM.exidx.text.tEventWakeUpTask), (8 bytes).
    Removing tevent.o(.ARM.exidx.text.tEventRemoveTask), (8 bytes).
    Removing tevent.o(.text.tEventRemoveAll), (116 bytes).
    Removing tevent.o(.ARM.exidx.text.tEventRemoveAll), (8 bytes).
    Removing tevent.o(.text.tEventWaitCount), (38 bytes).
    Removing tevent.o(.ARM.exidx.text.tEventWaitCount), (8 bytes).
    Removing tsem.o(.text), (0 bytes).
    Removing tmbox.o(.text), (0 bytes).
    Removing tmemblock.o(.text), (0 bytes).
    Removing tflaggroup.o(.text), (0 bytes).
    Removing tmutex.o(.text), (0 bytes).
    Removing ttimer.o(.text), (0 bytes).
    Removing thooks.o(.text), (0 bytes).
    Removing startup_armcm3.o(.text), (0 bytes).
    Removing startup_armcm3.o(.ARM.exidx.text.Default_Handler), (8 bytes).
    Removing startup_armcm3.o(.ARM.exidx.text.Reset_Handler), (8 bytes).
    Removing startup_armcm3.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing system_armcm3.o(.text), (0 bytes).
    Removing system_armcm3.o(.text.SystemCoreClockUpdate), (20 bytes).
    Removing system_armcm3.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_armcm3.o(.ARM.exidx.text.SystemInit), (8 bytes).

113 unused section(s) (total 2072 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry4.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    Source/cortex.s                          0x00000000   Number         0  cortex.o ABSOLUTE
    __tagsym$$used.0                         0x00000000   Number         0  startup_armcm3.o(RESET)
    app.c                                    0x00000000   Number         0  app.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    startup_ARMCM3.c                         0x00000000   Number         0  startup_armcm3.o ABSOLUTE
    switch.c                                 0x00000000   Number         0  switch.o ABSOLUTE
    system_ARMCM3.c                          0x00000000   Number         0  system_armcm3.o ABSOLUTE
    tBitmap.c                                0x00000000   Number         0  tbitmap.o ABSOLUTE
    tCpu.c                                   0x00000000   Number         0  tcpu.o ABSOLUTE
    tEvent.c                                 0x00000000   Number         0  tevent.o ABSOLUTE
    tFlagGroup.c                             0x00000000   Number         0  tflaggroup.o ABSOLUTE
    tHooks.c                                 0x00000000   Number         0  thooks.o ABSOLUTE
    tList.c                                  0x00000000   Number         0  tlist.o ABSOLUTE
    tMbox.c                                  0x00000000   Number         0  tmbox.o ABSOLUTE
    tMemBlock.c                              0x00000000   Number         0  tmemblock.o ABSOLUTE
    tMutex.c                                 0x00000000   Number         0  tmutex.o ABSOLUTE
    tSem.c                                   0x00000000   Number         0  tsem.o ABSOLUTE
    tTask.c                                  0x00000000   Number         0  ttask.o ABSOLUTE
    tTime.c                                  0x00000000   Number         0  ttime.o ABSOLUTE
    tTimer.c                                 0x00000000   Number         0  ttimer.o ABSOLUTE
    .ARM.Collect$$$$00000000                 0x000003c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000003                 0x000003c0   Section        4  entry4.o(.ARM.Collect$$$$00000003)
    .ARM.Collect$$$$00000004                 0x000003c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000003c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000003c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000003c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x000003d0   Data           4  entry4.o(.ARM.Collect$$$$00002714)
    .ARM.Collect$$$$0000000D                 0x000003d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x000003d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002714                 0x000003d0   Section        4  entry4.o(.ARM.Collect$$$$00002714)
    .text                                    0x000003d4   Section       48  cortex.o(.text)
    .text                                    0x00000404   Section        0  memseta.o(.text)
    .text                                    0x00000428   Section       48  init.o(.text)
    [Anonymous Symbol]                       0x00000458   Section        0  startup_armcm3.o(.text.Default_Handler)
    [Anonymous Symbol]                       0x0000045c   Section        0  startup_armcm3.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x00000460   Section        0  startup_armcm3.o(.text.Reset_Handler)
    [Anonymous Symbol]                       0x00000468   Section        0  tcpu.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00000470   Section        0  system_armcm3.o(.text.SystemInit)
    __NVIC_SetPriority                       0x00000499   Thumb Code    66  tcpu.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x00000498   Section        0  tcpu.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x000004dc   Section        0  main.o(.text.idleTaskEntry)
    [Anonymous Symbol]                       0x00000510   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x00000568   Section        0  tbitmap.o(.text.tBitmapClear)
    [Anonymous Symbol]                       0x00000584   Section        0  tbitmap.o(.text.tBitmapGetFirstSet)
    [Anonymous Symbol]                       0x00000608   Section        0  tbitmap.o(.text.tBitmapPosCount)
    [Anonymous Symbol]                       0x0000060c   Section        0  tbitmap.o(.text.tBitmapSet)
    [Anonymous Symbol]                       0x00000628   Section        0  tevent.o(.text.tEventRemoveTask)
    [Anonymous Symbol]                       0x0000066c   Section        0  app.o(.text.tInitApp)
    [Anonymous Symbol]                       0x000006f8   Section        0  tlist.o(.text.tListAddLast)
    [Anonymous Symbol]                       0x00000728   Section        0  tlist.o(.text.tListCount)
    [Anonymous Symbol]                       0x00000734   Section        0  tlist.o(.text.tListFirst)
    [Anonymous Symbol]                       0x00000754   Section        0  tlist.o(.text.tListInit)
    [Anonymous Symbol]                       0x0000076c   Section        0  tlist.o(.text.tListRemove)
    [Anonymous Symbol]                       0x00000790   Section        0  tlist.o(.text.tListRemoveFirst)
    [Anonymous Symbol]                       0x000007c8   Section        0  tlist.o(.text.tNodeInit)
    [Anonymous Symbol]                       0x000007d8   Section        0  tcpu.o(.text.tSetSysTickPeriod)
    [Anonymous Symbol]                       0x00000830   Section        0  ttime.o(.text.tTaskDelay)
    [Anonymous Symbol]                       0x00000864   Section        0  main.o(.text.tTaskDelayedInit)
    [Anonymous Symbol]                       0x00000874   Section        0  switch.o(.text.tTaskEnterCritical)
    [Anonymous Symbol]                       0x00000888   Section        0  switch.o(.text.tTaskExitCritical)
    [Anonymous Symbol]                       0x0000089c   Section        0  main.o(.text.tTaskHighestReady)
    [Anonymous Symbol]                       0x000008d0   Section        0  ttask.o(.text.tTaskInit)
    [Anonymous Symbol]                       0x00000a18   Section        0  switch.o(.text.tTaskRunFirst)
    [Anonymous Symbol]                       0x00000a44   Section        0  main.o(.text.tTaskSched)
    [Anonymous Symbol]                       0x00000a9c   Section        0  main.o(.text.tTaskSchedDisable)
    [Anonymous Symbol]                       0x00000ad0   Section        0  main.o(.text.tTaskSchedInit)
    [Anonymous Symbol]                       0x00000b10   Section        0  main.o(.text.tTaskSchedRdy)
    [Anonymous Symbol]                       0x00000b44   Section        0  main.o(.text.tTaskSchedUnRdy)
    [Anonymous Symbol]                       0x00000b94   Section        0  switch.o(.text.tTaskSwitch)
    [Anonymous Symbol]                       0x00000ba4   Section        0  main.o(.text.tTaskSystemTickHandler)
    [Anonymous Symbol]                       0x00000ca4   Section        0  main.o(.text.tTimeTaskWait)
    [Anonymous Symbol]                       0x00000cd4   Section        0  main.o(.text.tTimeTaskWakeUp)
    [Anonymous Symbol]                       0x00000cfc   Section        0  main.o(.text.tTimeTickInit)
    [Anonymous Symbol]                       0x00000d0c   Section        0  app.o(.text.task1Entry)
    [Anonymous Symbol]                       0x00000d38   Section        0  app.o(.text.task2Entry)
    [Anonymous Symbol]                       0x00000d64   Section        0  app.o(.text.task3Entry)
    i.__scatterload_copy                     0x00000d8e   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00000d9c   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00000d9e   Section       14  handlers.o(i.__scatterload_zeroinit)
    tBitmapGetFirstSet.quickFindTable        0x00000dac   Data         256  tbitmap.o(.rodata.tBitmapGetFirstSet.quickFindTable)
    [Anonymous Symbol]                       0x00000dac   Section        0  tbitmap.o(.rodata.tBitmapGetFirstSet.quickFindTable)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data         960  startup_armcm3.o(RESET)
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __main                                   0x000003c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000003c1   Thumb Code     0  entry4.o(.ARM.Collect$$$$00000003)
    _main_scatterload                        0x000003c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000003c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000003c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000003c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000003c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x000003d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x000003d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    PendSV_Handler                           0x000003d5   Thumb Code    40  cortex.o(.text)
    __aeabi_memset                           0x00000405   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x00000405   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x00000405   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x00000413   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x00000413   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x00000413   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x00000417   Thumb Code    18  memseta.o(.text)
    __scatterload                            0x00000429   Thumb Code    38  init.o(.text)
    __scatterload_rt2                        0x00000429   Thumb Code     0  init.o(.text)
    BusFault_Handler                         0x00000459   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    DebugMon_Handler                         0x00000459   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    Default_Handler                          0x00000459   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    Interrupt0_Handler                       0x00000459   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    Interrupt1_Handler                       0x00000459   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    Interrupt2_Handler                       0x00000459   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    Interrupt3_Handler                       0x00000459   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    Interrupt4_Handler                       0x00000459   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    Interrupt5_Handler                       0x00000459   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    Interrupt6_Handler                       0x00000459   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    Interrupt7_Handler                       0x00000459   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    Interrupt8_Handler                       0x00000459   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    Interrupt9_Handler                       0x00000459   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    MemManage_Handler                        0x00000459   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    NMI_Handler                              0x00000459   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    SVC_Handler                              0x00000459   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    UsageFault_Handler                       0x00000459   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    HardFault_Handler                        0x0000045d   Thumb Code     4  startup_armcm3.o(.text.HardFault_Handler)
    Reset_Handler                            0x00000461   Thumb Code     8  startup_armcm3.o(.text.Reset_Handler)
    SysTick_Handler                          0x00000469   Thumb Code     8  tcpu.o(.text.SysTick_Handler)
    SystemInit                               0x00000471   Thumb Code    38  system_armcm3.o(.text.SystemInit)
    idleTaskEntry                            0x000004dd   Thumb Code    50  main.o(.text.idleTaskEntry)
    main                                     0x00000511   Thumb Code    88  main.o(.text.main)
    tBitmapClear                             0x00000569   Thumb Code    26  tbitmap.o(.text.tBitmapClear)
    tBitmapGetFirstSet                       0x00000585   Thumb Code   130  tbitmap.o(.text.tBitmapGetFirstSet)
    tBitmapPosCount                          0x00000609   Thumb Code     4  tbitmap.o(.text.tBitmapPosCount)
    tBitmapSet                               0x0000060d   Thumb Code    26  tbitmap.o(.text.tBitmapSet)
    tEventRemoveTask                         0x00000629   Thumb Code    66  tevent.o(.text.tEventRemoveTask)
    tInitApp                                 0x0000066d   Thumb Code   140  app.o(.text.tInitApp)
    tListAddLast                             0x000006f9   Thumb Code    46  tlist.o(.text.tListAddLast)
    tListCount                               0x00000729   Thumb Code    12  tlist.o(.text.tListCount)
    tListFirst                               0x00000735   Thumb Code    30  tlist.o(.text.tListFirst)
    tListInit                                0x00000755   Thumb Code    22  tlist.o(.text.tListInit)
    tListRemove                              0x0000076d   Thumb Code    34  tlist.o(.text.tListRemove)
    tListRemoveFirst                         0x00000791   Thumb Code    54  tlist.o(.text.tListRemoveFirst)
    tNodeInit                                0x000007c9   Thumb Code    16  tlist.o(.text.tNodeInit)
    tSetSysTickPeriod                        0x000007d9   Thumb Code    86  tcpu.o(.text.tSetSysTickPeriod)
    tTaskDelay                               0x00000831   Thumb Code    52  ttime.o(.text.tTaskDelay)
    tTaskDelayedInit                         0x00000865   Thumb Code    16  main.o(.text.tTaskDelayedInit)
    tTaskEnterCritical                       0x00000875   Thumb Code    20  switch.o(.text.tTaskEnterCritical)
    tTaskExitCritical                        0x00000889   Thumb Code    18  switch.o(.text.tTaskExitCritical)
    tTaskHighestReady                        0x0000089d   Thumb Code    50  main.o(.text.tTaskHighestReady)
    tTaskInit                                0x000008d1   Thumb Code   326  ttask.o(.text.tTaskInit)
    tTaskRunFirst                            0x00000a19   Thumb Code    42  switch.o(.text.tTaskRunFirst)
    tTaskSched                               0x00000a45   Thumb Code    88  main.o(.text.tTaskSched)
    tTaskSchedDisable                        0x00000a9d   Thumb Code    52  main.o(.text.tTaskSchedDisable)
    tTaskSchedInit                           0x00000ad1   Thumb Code    64  main.o(.text.tTaskSchedInit)
    tTaskSchedRdy                            0x00000b11   Thumb Code    52  main.o(.text.tTaskSchedRdy)
    tTaskSchedUnRdy                          0x00000b45   Thumb Code    78  main.o(.text.tTaskSchedUnRdy)
    tTaskSwitch                              0x00000b95   Thumb Code    16  switch.o(.text.tTaskSwitch)
    tTaskSystemTickHandler                   0x00000ba5   Thumb Code   256  main.o(.text.tTaskSystemTickHandler)
    tTimeTaskWait                            0x00000ca5   Thumb Code    46  main.o(.text.tTimeTaskWait)
    tTimeTaskWakeUp                          0x00000cd5   Thumb Code    38  main.o(.text.tTimeTaskWakeUp)
    tTimeTickInit                            0x00000cfd   Thumb Code    14  main.o(.text.tTimeTickInit)
    task1Entry                               0x00000d0d   Thumb Code    42  app.o(.text.task1Entry)
    task2Entry                               0x00000d39   Thumb Code    42  app.o(.text.task2Entry)
    task3Entry                               0x00000d65   Thumb Code    42  app.o(.text.task3Entry)
    __scatterload_copy                       0x00000d8f   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00000d9d   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00000d9f   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    Region$$Table$$Base                      0x00000eac   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00000ecc   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_armcm3.o(.data.SystemCoreClock)
    currentTask                              0x20000004   Data           4  main.o(.bss.currentTask)
    idleCount                                0x20000008   Data           4  main.o(.bss.idleCount)
    idleTaskEnv                              0x2000000c   Data        4096  main.o(.bss.idleTaskEnv)
    nextTask                                 0x2000100c   Data           4  main.o(.bss.nextTask)
    schedLockCount                           0x20001010   Data           1  main.o(.bss.schedLockCount)
    tTask1                                   0x20001014   Data          80  app.o(.bss.tTask1)
    tTask2                                   0x20001064   Data          80  app.o(.bss.tTask2)
    tTask3                                   0x200010b4   Data          80  app.o(.bss.tTask3)
    tTaskDelayedList                         0x20001104   Data          12  main.o(.bss.tTaskDelayedList)
    tTaskIdle                                0x20001110   Data          80  main.o(.bss.tTaskIdle)
    task1Env                                 0x20001160   Data        4096  app.o(.bss.task1Env)
    task1Flag                                0x20002160   Data           4  app.o(.bss.task1Flag)
    task2Env                                 0x20002164   Data        4096  app.o(.bss.task2Env)
    task2Flag                                0x20003164   Data           4  app.o(.bss.task2Flag)
    task3Env                                 0x20003168   Data        4096  app.o(.bss.task3Env)
    task3Flag                                0x20004168   Data           4  app.o(.bss.task3Flag)
    taskPrioBitmap                           0x2000416c   Data           4  main.o(.bss.taskPrioBitmap)
    taskTable                                0x20004170   Data         384  main.o(.bss.taskTable)
    tickCount                                0x200042f0   Data           4  main.o(.bss.tickCount)
    Image$$ARM_LIB_STACK$$ZI$$Limit          0x20040000   Number         0  anon$$obj.o ABSOLUTE



==============================================================================

Memory Map of the image

  Image Entry point : 0x000003c1

  Load Region LR_ROM (Base: 0x00000000, Size: 0x00000ed0, Max: 0x00080000, ABSOLUTE)

    Execution Region ER_ROM (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00000ecc, Max: 0x00080000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000003c0   Data   RO          232    RESET               startup_armcm3.o
    0x000003c0   0x000003c0   0x00000000   Code   RO          251  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x000003c0   0x000003c0   0x00000004   Code   RO          256    .ARM.Collect$$$$00000003  mc_w.l(entry4.o)
    0x000003c4   0x000003c4   0x00000004   Code   RO          259    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x000003c8   0x000003c8   0x00000000   Code   RO          261    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x000003c8   0x000003c8   0x00000000   Code   RO          263    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x000003c8   0x000003c8   0x00000008   Code   RO          264    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x000003d0   0x000003d0   0x00000000   Code   RO          266    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x000003d0   0x000003d0   0x00000000   Code   RO          268    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x000003d0   0x000003d0   0x00000004   Code   RO          257    .ARM.Collect$$$$00002714  mc_w.l(entry4.o)
    0x000003d4   0x000003d4   0x00000030   Code   RO           79    .text               cortex.o
    0x00000404   0x00000404   0x00000024   Code   RO          254    .text               mc_w.l(memseta.o)
    0x00000428   0x00000428   0x00000030   Code   RO          270    .text               mc_w.l(init.o)
    0x00000458   0x00000458   0x00000004   Code   RO          226    .text.Default_Handler  startup_armcm3.o
    0x0000045c   0x0000045c   0x00000004   Code   RO          230    .text.HardFault_Handler  startup_armcm3.o
    0x00000460   0x00000460   0x00000008   Code   RO          228    .text.Reset_Handler  startup_armcm3.o
    0x00000468   0x00000468   0x00000008   Code   RO          189    .text.SysTick_Handler  tcpu.o
    0x00000470   0x00000470   0x00000026   Code   RO          242    .text.SystemInit    system_armcm3.o
    0x00000496   0x00000496   0x00000002   PAD
    0x00000498   0x00000498   0x00000042   Code   RO          187    .text.__NVIC_SetPriority  tcpu.o
    0x000004da   0x000004da   0x00000002   PAD
    0x000004dc   0x000004dc   0x00000032   Code   RO           32    .text.idleTaskEntry  main.o
    0x0000050e   0x0000050e   0x00000002   PAD
    0x00000510   0x00000510   0x00000058   Code   RO           34    .text.main          main.o
    0x00000568   0x00000568   0x0000001a   Code   RO          107    .text.tBitmapClear  tbitmap.o
    0x00000582   0x00000582   0x00000002   PAD
    0x00000584   0x00000584   0x00000082   Code   RO          109    .text.tBitmapGetFirstSet  tbitmap.o
    0x00000606   0x00000606   0x00000002   PAD
    0x00000608   0x00000608   0x00000004   Code   RO          103    .text.tBitmapPosCount  tbitmap.o
    0x0000060c   0x0000060c   0x0000001a   Code   RO          105    .text.tBitmapSet    tbitmap.o
    0x00000626   0x00000626   0x00000002   PAD
    0x00000628   0x00000628   0x00000042   Code   RO          206    .text.tEventRemoveTask  tevent.o
    0x0000066a   0x0000066a   0x00000002   PAD
    0x0000066c   0x0000066c   0x0000008c   Code   RO           62    .text.tInitApp      app.o
    0x000006f8   0x000006f8   0x0000002e   Code   RO          137    .text.tListAddLast  tlist.o
    0x00000726   0x00000726   0x00000002   PAD
    0x00000728   0x00000728   0x0000000c   Code   RO          123    .text.tListCount    tlist.o
    0x00000734   0x00000734   0x0000001e   Code   RO          125    .text.tListFirst    tlist.o
    0x00000752   0x00000752   0x00000002   PAD
    0x00000754   0x00000754   0x00000016   Code   RO          121    .text.tListInit     tlist.o
    0x0000076a   0x0000076a   0x00000002   PAD
    0x0000076c   0x0000076c   0x00000022   Code   RO          143    .text.tListRemove   tlist.o
    0x0000078e   0x0000078e   0x00000002   PAD
    0x00000790   0x00000790   0x00000036   Code   RO          139    .text.tListRemoveFirst  tlist.o
    0x000007c6   0x000007c6   0x00000002   PAD
    0x000007c8   0x000007c8   0x00000010   Code   RO          119    .text.tNodeInit     tlist.o
    0x000007d8   0x000007d8   0x00000056   Code   RO          185    .text.tSetSysTickPeriod  tcpu.o
    0x0000082e   0x0000082e   0x00000002   PAD
    0x00000830   0x00000830   0x00000034   Code   RO          177    .text.tTaskDelay    ttime.o
    0x00000864   0x00000864   0x00000010   Code   RO           20    .text.tTaskDelayedInit  main.o
    0x00000874   0x00000874   0x00000014   Code   RO           86    .text.tTaskEnterCritical  switch.o
    0x00000888   0x00000888   0x00000012   Code   RO           88    .text.tTaskExitCritical  switch.o
    0x0000089a   0x0000089a   0x00000002   PAD
    0x0000089c   0x0000089c   0x00000032   Code   RO            4    .text.tTaskHighestReady  main.o
    0x000008ce   0x000008ce   0x00000002   PAD
    0x000008d0   0x000008d0   0x00000146   Code   RO          152    .text.tTaskInit     ttask.o
    0x00000a16   0x00000a16   0x00000002   PAD
    0x00000a18   0x00000a18   0x0000002a   Code   RO           90    .text.tTaskRunFirst  switch.o
    0x00000a42   0x00000a42   0x00000002   PAD
    0x00000a44   0x00000a44   0x00000058   Code   RO           12    .text.tTaskSched    main.o
    0x00000a9c   0x00000a9c   0x00000034   Code   RO            8    .text.tTaskSchedDisable  main.o
    0x00000ad0   0x00000ad0   0x00000040   Code   RO            6    .text.tTaskSchedInit  main.o
    0x00000b10   0x00000b10   0x00000034   Code   RO           14    .text.tTaskSchedRdy  main.o
    0x00000b44   0x00000b44   0x0000004e   Code   RO           16    .text.tTaskSchedUnRdy  main.o
    0x00000b92   0x00000b92   0x00000002   PAD
    0x00000b94   0x00000b94   0x00000010   Code   RO           92    .text.tTaskSwitch   switch.o
    0x00000ba4   0x00000ba4   0x00000100   Code   RO           30    .text.tTaskSystemTickHandler  main.o
    0x00000ca4   0x00000ca4   0x0000002e   Code   RO           22    .text.tTimeTaskWait  main.o
    0x00000cd2   0x00000cd2   0x00000002   PAD
    0x00000cd4   0x00000cd4   0x00000026   Code   RO           24    .text.tTimeTaskWakeUp  main.o
    0x00000cfa   0x00000cfa   0x00000002   PAD
    0x00000cfc   0x00000cfc   0x0000000e   Code   RO           28    .text.tTimeTickInit  main.o
    0x00000d0a   0x00000d0a   0x00000002   PAD
    0x00000d0c   0x00000d0c   0x0000002a   Code   RO           56    .text.task1Entry    app.o
    0x00000d36   0x00000d36   0x00000002   PAD
    0x00000d38   0x00000d38   0x0000002a   Code   RO           58    .text.task2Entry    app.o
    0x00000d62   0x00000d62   0x00000002   PAD
    0x00000d64   0x00000d64   0x0000002a   Code   RO           60    .text.task3Entry    app.o
    0x00000d8e   0x00000d8e   0x0000000e   Code   RO          274    i.__scatterload_copy  mc_w.l(handlers.o)
    0x00000d9c   0x00000d9c   0x00000002   Code   RO          275    i.__scatterload_null  mc_w.l(handlers.o)
    0x00000d9e   0x00000d9e   0x0000000e   Code   RO          276    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x00000dac   0x00000dac   0x00000100   Data   RO          111    .rodata.tBitmapGetFirstSet.quickFindTable  tbitmap.o
    0x00000eac   0x00000eac   0x00000020   Data   RO          273    Region$$Table       anon$$obj.o


    Execution Region RW_NOINIT (Exec base: 0x20000000, Load base: 0x00000ecc, Size: 0x00000000, Max: 0x0003f200, ABSOLUTE, UNINIT)

    **** No section assigned to this execution region ****


    Execution Region RW_RAM (Exec base: 0x20000000, Load base: 0x00000ecc, Size: 0x000042f4, Max: 0x0003f200, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00000ecc   0x00000004   Data   RW          244    .data.SystemCoreClock  system_armcm3.o
    0x20000004        -       0x00000004   Zero   RW           39    .bss.currentTask    main.o
    0x20000008        -       0x00000004   Zero   RW           43    .bss.idleCount      main.o
    0x2000000c        -       0x00001000   Zero   RW           45    .bss.idleTaskEnv    main.o
    0x2000100c        -       0x00000004   Zero   RW           40    .bss.nextTask       main.o
    0x20001010        -       0x00000001   Zero   RW           38    .bss.schedLockCount  main.o
    0x20001011   0x00000ed0   0x00000003   PAD
    0x20001014        -       0x00000050   Zero   RW           67    .bss.tTask1         app.o
    0x20001064        -       0x00000050   Zero   RW           69    .bss.tTask2         app.o
    0x200010b4        -       0x00000050   Zero   RW           71    .bss.tTask3         app.o
    0x20001104        -       0x0000000c   Zero   RW           41    .bss.tTaskDelayedList  main.o
    0x20001110        -       0x00000050   Zero   RW           44    .bss.tTaskIdle      main.o
    0x20001160        -       0x00001000   Zero   RW           68    .bss.task1Env       app.o
    0x20002160        -       0x00000004   Zero   RW           64    .bss.task1Flag      app.o
    0x20002164        -       0x00001000   Zero   RW           70    .bss.task2Env       app.o
    0x20003164        -       0x00000004   Zero   RW           65    .bss.task2Flag      app.o
    0x20003168        -       0x00001000   Zero   RW           72    .bss.task3Env       app.o
    0x20004168        -       0x00000004   Zero   RW           66    .bss.task3Flag      app.o
    0x2000416c        -       0x00000004   Zero   RW           36    .bss.taskPrioBitmap  main.o
    0x20004170        -       0x00000180   Zero   RW           37    .bss.taskTable      main.o
    0x200042f0        -       0x00000004   Zero   RW           42    .bss.tickCount      main.o


    Execution Region ARM_LIB_HEAP (Exec base: 0x200042f8, Load base: 0x00000ed0, Size: 0x00000c00, Max: 0x00000c00, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x200042f8        -       0x00000c00   Zero   RW            1    ARM_LIB_HEAP.bss    anon$$obj.o


    Execution Region ARM_LIB_STACK (Exec base: 0x2003fe00, Load base: 0x00000ed0, Size: 0x00000200, Max: 0x00000200, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x2003fe00        -       0x00000200   Zero   RW            2    ARM_LIB_STACK.bss   anon$$obj.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       266          0          0          0      12540       2196   app.o
        48          8          0          0          0        324   cortex.o
       892          0          0          0       4593       4695   main.o
        16          0        960          0          0        803   startup_armcm3.o
        96          0          0          0          0       1484   switch.o
        38          0          0          4          0       1403   system_armcm3.o
       186          0        256          0          0       1326   tbitmap.o
       160          0          0          0          0       2693   tcpu.o
        66          0          0          0          0       3411   tevent.o
       214          0          0          0          0       2695   tlist.o
       326          0          0          0          0       3873   ttask.o
        52          0          0          0          0        536   ttime.o

    ----------------------------------------------------------------------
      2406          8       1248          4      20720      25439   Object Totals
         0          0         32          0       3584          0   (incl. Generated)
        46          0          0          0          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry4.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        48         10          0          0          0         68   init.o
        36          0          0          0          0        108   memseta.o

    ----------------------------------------------------------------------
       134         18          0          0          0        176   Library Totals
         0          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       134         18          0          0          0        176   mc_w.l

    ----------------------------------------------------------------------
       134         18          0          0          0        176   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      2540         26       1248          4      20720      25567   Grand Totals
      2540         26       1248          4      20720      25567   ELF Image Totals
      2540         26       1248          4          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 3788 (   3.70kB)
    Total RW  Size (RW Data + ZI Data)             20724 (  20.24kB)
    Total ROM Size (Code + RO Data + RW Data)       3792 (   3.70kB)

==============================================================================

