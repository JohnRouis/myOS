Component: Arm Compiler for Embedded 6.22 Tool: armlink [5ee90200]

==============================================================================

Section Cross References

    main.o(.text.tTaskHighestReady) refers to main.o(.bss.taskPrioBitmap) for taskPrioBitmap
    main.o(.text.tTaskHighestReady) refers to tbitmap.o(.text.tBitmapGetFirstSet) for tBitmapGetFirstSet
    main.o(.text.tTaskHighestReady) refers to main.o(.bss.taskTable) for taskTable
    main.o(.text.tTaskHighestReady) refers to tlist.o(.text.tListFirst) for tListFirst
    main.o(.ARM.exidx.text.tTaskHighestReady) refers to main.o(.text.tTaskHighestReady) for [Anonymous Symbol]
    main.o(.text.tTaskSchedInit) refers to main.o(.bss.schedLockCount) for schedLockCount
    main.o(.text.tTaskSchedInit) refers to main.o(.bss.taskTable) for taskTable
    main.o(.text.tTaskSchedInit) refers to tlist.o(.text.tListInit) for tListInit
    main.o(.ARM.exidx.text.tTaskSchedInit) refers to main.o(.text.tTaskSchedInit) for [Anonymous Symbol]
    main.o(.text.tTaskSchedDisable) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    main.o(.text.tTaskSchedDisable) refers to main.o(.bss.schedLockCount) for schedLockCount
    main.o(.text.tTaskSchedDisable) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    main.o(.ARM.exidx.text.tTaskSchedDisable) refers to main.o(.text.tTaskSchedDisable) for [Anonymous Symbol]
    main.o(.text.tTaskSchedEnable) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    main.o(.text.tTaskSchedEnable) refers to main.o(.bss.schedLockCount) for schedLockCount
    main.o(.text.tTaskSchedEnable) refers to main.o(.text.tTaskSched) for tTaskSched
    main.o(.text.tTaskSchedEnable) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    main.o(.ARM.exidx.text.tTaskSchedEnable) refers to main.o(.text.tTaskSchedEnable) for [Anonymous Symbol]
    main.o(.text.tTaskSched) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    main.o(.text.tTaskSched) refers to main.o(.bss.schedLockCount) for schedLockCount
    main.o(.text.tTaskSched) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    main.o(.text.tTaskSched) refers to main.o(.text.tTaskHighestReady) for tTaskHighestReady
    main.o(.text.tTaskSched) refers to main.o(.bss.currentTask) for currentTask
    main.o(.text.tTaskSched) refers to main.o(.bss.nextTask) for nextTask
    main.o(.text.tTaskSched) refers to switch.o(.text.tTaskSwitch) for tTaskSwitch
    main.o(.ARM.exidx.text.tTaskSched) refers to main.o(.text.tTaskSched) for [Anonymous Symbol]
    main.o(.text.tTaskSchedRdy) refers to main.o(.bss.taskTable) for taskTable
    main.o(.text.tTaskSchedRdy) refers to tlist.o(.text.tListAddLast) for tListAddLast
    main.o(.text.tTaskSchedRdy) refers to main.o(.bss.taskPrioBitmap) for taskPrioBitmap
    main.o(.text.tTaskSchedRdy) refers to tbitmap.o(.text.tBitmapSet) for tBitmapSet
    main.o(.ARM.exidx.text.tTaskSchedRdy) refers to main.o(.text.tTaskSchedRdy) for [Anonymous Symbol]
    main.o(.text.tTaskSchedUnRdy) refers to main.o(.bss.taskTable) for taskTable
    main.o(.text.tTaskSchedUnRdy) refers to tlist.o(.text.tListRemove) for tListRemove
    main.o(.text.tTaskSchedUnRdy) refers to tlist.o(.text.tListCount) for tListCount
    main.o(.text.tTaskSchedUnRdy) refers to main.o(.bss.taskPrioBitmap) for taskPrioBitmap
    main.o(.text.tTaskSchedUnRdy) refers to tbitmap.o(.text.tBitmapClear) for tBitmapClear
    main.o(.ARM.exidx.text.tTaskSchedUnRdy) refers to main.o(.text.tTaskSchedUnRdy) for [Anonymous Symbol]
    main.o(.text.tTaskSchedRemove) refers to main.o(.bss.taskTable) for taskTable
    main.o(.text.tTaskSchedRemove) refers to tlist.o(.text.tListRemove) for tListRemove
    main.o(.text.tTaskSchedRemove) refers to tlist.o(.text.tListCount) for tListCount
    main.o(.text.tTaskSchedRemove) refers to main.o(.bss.taskPrioBitmap) for taskPrioBitmap
    main.o(.text.tTaskSchedRemove) refers to tbitmap.o(.text.tBitmapClear) for tBitmapClear
    main.o(.ARM.exidx.text.tTaskSchedRemove) refers to main.o(.text.tTaskSchedRemove) for [Anonymous Symbol]
    main.o(.text.tTaskDelayedInit) refers to main.o(.bss.tTaskDelayedList) for tTaskDelayedList
    main.o(.text.tTaskDelayedInit) refers to tlist.o(.text.tListInit) for tListInit
    main.o(.ARM.exidx.text.tTaskDelayedInit) refers to main.o(.text.tTaskDelayedInit) for [Anonymous Symbol]
    main.o(.text.tTimeTaskWait) refers to main.o(.bss.tTaskDelayedList) for tTaskDelayedList
    main.o(.text.tTimeTaskWait) refers to tlist.o(.text.tListAddLast) for tListAddLast
    main.o(.ARM.exidx.text.tTimeTaskWait) refers to main.o(.text.tTimeTaskWait) for [Anonymous Symbol]
    main.o(.text.tTimeTaskWakeUp) refers to main.o(.bss.tTaskDelayedList) for tTaskDelayedList
    main.o(.text.tTimeTaskWakeUp) refers to tlist.o(.text.tListRemove) for tListRemove
    main.o(.ARM.exidx.text.tTimeTaskWakeUp) refers to main.o(.text.tTimeTaskWakeUp) for [Anonymous Symbol]
    main.o(.text.tTimeTaskRemove) refers to main.o(.bss.tTaskDelayedList) for tTaskDelayedList
    main.o(.text.tTimeTaskRemove) refers to tlist.o(.text.tListRemove) for tListRemove
    main.o(.ARM.exidx.text.tTimeTaskRemove) refers to main.o(.text.tTimeTaskRemove) for [Anonymous Symbol]
    main.o(.text.tTaskSystemTickHandler) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    main.o(.text.tTaskSystemTickHandler) refers to main.o(.bss.tTaskDelayedList) for tTaskDelayedList
    main.o(.text.tTaskSystemTickHandler) refers to tevent.o(.text.tEventRemoveTask) for tEventRemoveTask
    main.o(.text.tTaskSystemTickHandler) refers to main.o(.text.tTimeTaskWakeUp) for tTimeTaskWakeUp
    main.o(.text.tTaskSystemTickHandler) refers to main.o(.text.tTaskSchedRdy) for tTaskSchedRdy
    main.o(.text.tTaskSystemTickHandler) refers to main.o(.bss.currentTask) for currentTask
    main.o(.text.tTaskSystemTickHandler) refers to main.o(.bss.taskTable) for taskTable
    main.o(.text.tTaskSystemTickHandler) refers to tlist.o(.text.tListCount) for tListCount
    main.o(.text.tTaskSystemTickHandler) refers to tlist.o(.text.tListRemoveFirst) for tListRemoveFirst
    main.o(.text.tTaskSystemTickHandler) refers to tlist.o(.text.tListAddLast) for tListAddLast
    main.o(.text.tTaskSystemTickHandler) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    main.o(.text.tTaskSystemTickHandler) refers to main.o(.text.tTaskSched) for tTaskSched
    main.o(.ARM.exidx.text.tTaskSystemTickHandler) refers to main.o(.text.tTaskSystemTickHandler) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.idleTaskEntry) refers to main.o(.text.idleTaskEntry) for [Anonymous Symbol]
    main.o(.text.main) refers to main.o(.text.tTaskSchedInit) for tTaskSchedInit
    main.o(.text.main) refers to main.o(.text.tTaskDelayedInit) for tTaskDelayedInit
    main.o(.text.main) refers to app.o(.text.tInitApp) for tInitApp
    main.o(.text.main) refers to main.o(.bss.idleTaskEnv) for idleTaskEnv
    main.o(.text.main) refers to main.o(.bss.tTaskIdle) for tTaskIdle
    main.o(.text.main) refers to main.o(.text.idleTaskEntry) for idleTaskEntry
    main.o(.text.main) refers to ttask.o(.text.tTaskInit) for tTaskInit
    main.o(.text.main) refers to main.o(.text.tTaskHighestReady) for tTaskHighestReady
    main.o(.text.main) refers to main.o(.bss.nextTask) for nextTask
    main.o(.text.main) refers to switch.o(.text.tTaskRunFirst) for tTaskRunFirst
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    app.o(.text.task1Entry) refers to tcpu.o(.text.tSetSysTickPeriod) for tSetSysTickPeriod
    app.o(.text.task1Entry) refers to app.o(.bss.task1Flag) for task1Flag
    app.o(.text.task1Entry) refers to ttime.o(.text.tTaskDelay) for tTaskDelay
    app.o(.ARM.exidx.text.task1Entry) refers to app.o(.text.task1Entry) for [Anonymous Symbol]
    app.o(.text.task2Entry) refers to app.o(.bss.task2Flag) for task2Flag
    app.o(.text.task2Entry) refers to ttime.o(.text.tTaskDelay) for tTaskDelay
    app.o(.ARM.exidx.text.task2Entry) refers to app.o(.text.task2Entry) for [Anonymous Symbol]
    app.o(.text.task3Entry) refers to app.o(.bss.task3Flag) for task3Flag
    app.o(.text.task3Entry) refers to ttime.o(.text.tTaskDelay) for tTaskDelay
    app.o(.ARM.exidx.text.task3Entry) refers to app.o(.text.task3Entry) for [Anonymous Symbol]
    app.o(.text.tInitApp) refers to app.o(.bss.task1Env) for task1Env
    app.o(.text.tInitApp) refers to app.o(.bss.tTask1) for tTask1
    app.o(.text.tInitApp) refers to app.o(.text.task1Entry) for task1Entry
    app.o(.text.tInitApp) refers to ttask.o(.text.tTaskInit) for tTaskInit
    app.o(.text.tInitApp) refers to app.o(.bss.task2Env) for task2Env
    app.o(.text.tInitApp) refers to app.o(.bss.tTask2) for tTask2
    app.o(.text.tInitApp) refers to app.o(.text.task2Entry) for task2Entry
    app.o(.text.tInitApp) refers to app.o(.bss.task3Env) for task3Env
    app.o(.text.tInitApp) refers to app.o(.bss.tTask3) for tTask3
    app.o(.text.tInitApp) refers to app.o(.text.task3Entry) for task3Entry
    app.o(.ARM.exidx.text.tInitApp) refers to app.o(.text.tInitApp) for [Anonymous Symbol]
    cortex.o(.text) refers to main.o(.bss.currentTask) for currentTask
    cortex.o(.text) refers to main.o(.bss.nextTask) for nextTask
    switch.o(.ARM.exidx.text.tTaskEnterCritical) refers to switch.o(.text.tTaskEnterCritical) for [Anonymous Symbol]
    switch.o(.ARM.exidx.text.tTaskExitCritical) refers to switch.o(.text.tTaskExitCritical) for [Anonymous Symbol]
    switch.o(.ARM.exidx.text.tTaskRunFirst) refers to switch.o(.text.tTaskRunFirst) for [Anonymous Symbol]
    switch.o(.ARM.exidx.text.tTaskSwitch) refers to switch.o(.text.tTaskSwitch) for [Anonymous Symbol]
    tbitmap.o(.ARM.exidx.text.tBitmapInit) refers to tbitmap.o(.text.tBitmapInit) for [Anonymous Symbol]
    tbitmap.o(.ARM.exidx.text.tBitmapPosCount) refers to tbitmap.o(.text.tBitmapPosCount) for [Anonymous Symbol]
    tbitmap.o(.ARM.exidx.text.tBitmapSet) refers to tbitmap.o(.text.tBitmapSet) for [Anonymous Symbol]
    tbitmap.o(.ARM.exidx.text.tBitmapClear) refers to tbitmap.o(.text.tBitmapClear) for [Anonymous Symbol]
    tbitmap.o(.text.tBitmapGetFirstSet) refers to tbitmap.o(.rodata.tBitmapGetFirstSet.quickFindTable) for tBitmapGetFirstSet.quickFindTable
    tbitmap.o(.text.tBitmapGetFirstSet) refers to tbitmap.o(.text.tBitmapPosCount) for tBitmapPosCount
    tbitmap.o(.ARM.exidx.text.tBitmapGetFirstSet) refers to tbitmap.o(.text.tBitmapGetFirstSet) for [Anonymous Symbol]
    tlist.o(.ARM.exidx.text.tNodeInit) refers to tlist.o(.text.tNodeInit) for [Anonymous Symbol]
    tlist.o(.ARM.exidx.text.tListInit) refers to tlist.o(.text.tListInit) for [Anonymous Symbol]
    tlist.o(.ARM.exidx.text.tListCount) refers to tlist.o(.text.tListCount) for [Anonymous Symbol]
    tlist.o(.ARM.exidx.text.tListFirst) refers to tlist.o(.text.tListFirst) for [Anonymous Symbol]
    tlist.o(.ARM.exidx.text.tListLast) refers to tlist.o(.text.tListLast) for [Anonymous Symbol]
    tlist.o(.ARM.exidx.text.tListPpre) refers to tlist.o(.text.tListPpre) for [Anonymous Symbol]
    tlist.o(.ARM.exidx.text.tListNext) refers to tlist.o(.text.tListNext) for [Anonymous Symbol]
    tlist.o(.ARM.exidx.text.tListRemoveAll) refers to tlist.o(.text.tListRemoveAll) for [Anonymous Symbol]
    tlist.o(.ARM.exidx.text.tListAddFirst) refers to tlist.o(.text.tListAddFirst) for [Anonymous Symbol]
    tlist.o(.ARM.exidx.text.tListAddLast) refers to tlist.o(.text.tListAddLast) for [Anonymous Symbol]
    tlist.o(.ARM.exidx.text.tListRemoveFirst) refers to tlist.o(.text.tListRemoveFirst) for [Anonymous Symbol]
    tlist.o(.ARM.exidx.text.tListInsertAfter) refers to tlist.o(.text.tListInsertAfter) for [Anonymous Symbol]
    tlist.o(.ARM.exidx.text.tListRemove) refers to tlist.o(.text.tListRemove) for [Anonymous Symbol]
    ttask.o(.text.tTaskInit) refers to tlist.o(.text.tNodeInit) for tNodeInit
    ttask.o(.text.tTaskInit) refers to main.o(.text.tTaskSchedRdy) for tTaskSchedRdy
    ttask.o(.ARM.exidx.text.tTaskInit) refers to ttask.o(.text.tTaskInit) for [Anonymous Symbol]
    ttask.o(.text.tTaskSuspend) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    ttask.o(.text.tTaskSuspend) refers to main.o(.text.tTaskSchedUnRdy) for tTaskSchedUnRdy
    ttask.o(.text.tTaskSuspend) refers to main.o(.bss.currentTask) for currentTask
    ttask.o(.text.tTaskSuspend) refers to main.o(.text.tTaskSched) for tTaskSched
    ttask.o(.text.tTaskSuspend) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    ttask.o(.ARM.exidx.text.tTaskSuspend) refers to ttask.o(.text.tTaskSuspend) for [Anonymous Symbol]
    ttask.o(.text.tTaskWakeUp) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    ttask.o(.text.tTaskWakeUp) refers to main.o(.text.tTaskSchedRdy) for tTaskSchedRdy
    ttask.o(.text.tTaskWakeUp) refers to main.o(.text.tTaskSched) for tTaskSched
    ttask.o(.text.tTaskWakeUp) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    ttask.o(.ARM.exidx.text.tTaskWakeUp) refers to ttask.o(.text.tTaskWakeUp) for [Anonymous Symbol]
    ttask.o(.ARM.exidx.text.tTaskSetCleanCallFun) refers to ttask.o(.text.tTaskSetCleanCallFun) for [Anonymous Symbol]
    ttask.o(.text.tTaskForceDelete) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    ttask.o(.text.tTaskForceDelete) refers to main.o(.text.tTimeTaskRemove) for tTimeTaskRemove
    ttask.o(.text.tTaskForceDelete) refers to main.o(.text.tTaskSchedRemove) for tTaskSchedRemove
    ttask.o(.text.tTaskForceDelete) refers to main.o(.bss.currentTask) for currentTask
    ttask.o(.text.tTaskForceDelete) refers to main.o(.text.tTaskSched) for tTaskSched
    ttask.o(.text.tTaskForceDelete) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    ttask.o(.ARM.exidx.text.tTaskForceDelete) refers to ttask.o(.text.tTaskForceDelete) for [Anonymous Symbol]
    ttask.o(.text.tTaskRequestDelete) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    ttask.o(.text.tTaskRequestDelete) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    ttask.o(.ARM.exidx.text.tTaskRequestDelete) refers to ttask.o(.text.tTaskRequestDelete) for [Anonymous Symbol]
    ttask.o(.text.tTaskIsRequestedDeleted) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    ttask.o(.text.tTaskIsRequestedDeleted) refers to main.o(.bss.currentTask) for currentTask
    ttask.o(.text.tTaskIsRequestedDeleted) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    ttask.o(.ARM.exidx.text.tTaskIsRequestedDeleted) refers to ttask.o(.text.tTaskIsRequestedDeleted) for [Anonymous Symbol]
    ttask.o(.text.tTaskDeleteSelf) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    ttask.o(.text.tTaskDeleteSelf) refers to main.o(.bss.currentTask) for currentTask
    ttask.o(.text.tTaskDeleteSelf) refers to main.o(.text.tTaskSchedRemove) for tTaskSchedRemove
    ttask.o(.text.tTaskDeleteSelf) refers to main.o(.text.tTaskSched) for tTaskSched
    ttask.o(.text.tTaskDeleteSelf) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    ttask.o(.ARM.exidx.text.tTaskDeleteSelf) refers to ttask.o(.text.tTaskDeleteSelf) for [Anonymous Symbol]
    ttask.o(.text.tTaskGetInfo) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    ttask.o(.text.tTaskGetInfo) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    ttask.o(.ARM.exidx.text.tTaskGetInfo) refers to ttask.o(.text.tTaskGetInfo) for [Anonymous Symbol]
    ttime.o(.text.tTaskDelay) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    ttime.o(.text.tTaskDelay) refers to main.o(.bss.currentTask) for currentTask
    ttime.o(.text.tTaskDelay) refers to main.o(.text.tTimeTaskWait) for tTimeTaskWait
    ttime.o(.text.tTaskDelay) refers to main.o(.text.tTaskSchedUnRdy) for tTaskSchedUnRdy
    ttime.o(.text.tTaskDelay) refers to main.o(.text.tTaskSched) for tTaskSched
    ttime.o(.text.tTaskDelay) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    ttime.o(.ARM.exidx.text.tTaskDelay) refers to ttime.o(.text.tTaskDelay) for [Anonymous Symbol]
    tcpu.o(.text.tSetSysTickPeriod) refers to system_armcm3.o(.data.SystemCoreClock) for SystemCoreClock
    tcpu.o(.text.tSetSysTickPeriod) refers to tcpu.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    tcpu.o(.ARM.exidx.text.tSetSysTickPeriod) refers to tcpu.o(.text.tSetSysTickPeriod) for [Anonymous Symbol]
    tcpu.o(.ARM.exidx.text.__NVIC_SetPriority) refers to tcpu.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    tcpu.o(.text.SysTick_Handler) refers to main.o(.text.tTaskSystemTickHandler) for tTaskSystemTickHandler
    tcpu.o(.ARM.exidx.text.SysTick_Handler) refers to tcpu.o(.text.SysTick_Handler) for [Anonymous Symbol]
    tevent.o(.text.tEventInit) refers to tlist.o(.text.tListInit) for tListInit
    tevent.o(.ARM.exidx.text.tEventInit) refers to tevent.o(.text.tEventInit) for [Anonymous Symbol]
    tevent.o(.text.tEventWait) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tevent.o(.text.tEventWait) refers to main.o(.text.tTaskSchedUnRdy) for tTaskSchedUnRdy
    tevent.o(.text.tEventWait) refers to tlist.o(.text.tListAddLast) for tListAddLast
    tevent.o(.text.tEventWait) refers to main.o(.text.tTimeTaskWait) for tTimeTaskWait
    tevent.o(.text.tEventWait) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tevent.o(.ARM.exidx.text.tEventWait) refers to tevent.o(.text.tEventWait) for [Anonymous Symbol]
    tevent.o(.text.tEventWakeUp) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tevent.o(.text.tEventWakeUp) refers to tlist.o(.text.tListRemoveFirst) for tListRemoveFirst
    tevent.o(.text.tEventWakeUp) refers to main.o(.text.tTimeTaskWakeUp) for tTimeTaskWakeUp
    tevent.o(.text.tEventWakeUp) refers to main.o(.text.tTaskSchedRdy) for tTaskSchedRdy
    tevent.o(.text.tEventWakeUp) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tevent.o(.ARM.exidx.text.tEventWakeUp) refers to tevent.o(.text.tEventWakeUp) for [Anonymous Symbol]
    tevent.o(.text.tEventWakeUpTask) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tevent.o(.text.tEventWakeUpTask) refers to tlist.o(.text.tListRemove) for tListRemove
    tevent.o(.text.tEventWakeUpTask) refers to main.o(.text.tTimeTaskWakeUp) for tTimeTaskWakeUp
    tevent.o(.text.tEventWakeUpTask) refers to main.o(.text.tTaskSchedRdy) for tTaskSchedRdy
    tevent.o(.text.tEventWakeUpTask) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tevent.o(.ARM.exidx.text.tEventWakeUpTask) refers to tevent.o(.text.tEventWakeUpTask) for [Anonymous Symbol]
    tevent.o(.text.tEventRemoveTask) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tevent.o(.text.tEventRemoveTask) refers to tlist.o(.text.tListRemove) for tListRemove
    tevent.o(.text.tEventRemoveTask) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tevent.o(.ARM.exidx.text.tEventRemoveTask) refers to tevent.o(.text.tEventRemoveTask) for [Anonymous Symbol]
    tevent.o(.text.tEventRemoveAll) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tevent.o(.text.tEventRemoveAll) refers to tlist.o(.text.tListCount) for tListCount
    tevent.o(.text.tEventRemoveAll) refers to tlist.o(.text.tListRemoveFirst) for tListRemoveFirst
    tevent.o(.text.tEventRemoveAll) refers to main.o(.text.tTimeTaskWakeUp) for tTimeTaskWakeUp
    tevent.o(.text.tEventRemoveAll) refers to main.o(.text.tTaskSchedRdy) for tTaskSchedRdy
    tevent.o(.text.tEventRemoveAll) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tevent.o(.ARM.exidx.text.tEventRemoveAll) refers to tevent.o(.text.tEventRemoveAll) for [Anonymous Symbol]
    tevent.o(.text.tEventWaitCount) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tevent.o(.text.tEventWaitCount) refers to tlist.o(.text.tListCount) for tListCount
    tevent.o(.text.tEventWaitCount) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tevent.o(.ARM.exidx.text.tEventWaitCount) refers to tevent.o(.text.tEventWaitCount) for [Anonymous Symbol]
    tsem.o(.text.tSemInit) refers to tevent.o(.text.tEventInit) for tEventInit
    tsem.o(.ARM.exidx.text.tSemInit) refers to tsem.o(.text.tSemInit) for [Anonymous Symbol]
    tsem.o(.text.tSemWait) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tsem.o(.text.tSemWait) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tsem.o(.text.tSemWait) refers to main.o(.bss.currentTask) for currentTask
    tsem.o(.text.tSemWait) refers to tevent.o(.text.tEventWait) for tEventWait
    tsem.o(.text.tSemWait) refers to main.o(.text.tTaskSched) for tTaskSched
    tsem.o(.ARM.exidx.text.tSemWait) refers to tsem.o(.text.tSemWait) for [Anonymous Symbol]
    tsem.o(.text.tSemNoWaitGet) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tsem.o(.text.tSemNoWaitGet) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tsem.o(.ARM.exidx.text.tSemNoWaitGet) refers to tsem.o(.text.tSemNoWaitGet) for [Anonymous Symbol]
    tsem.o(.text.tSemNotify) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tsem.o(.text.tSemNotify) refers to tevent.o(.text.tEventWaitCount) for tEventWaitCount
    tsem.o(.text.tSemNotify) refers to tevent.o(.text.tEventWakeUp) for tEventWakeUp
    tsem.o(.text.tSemNotify) refers to main.o(.bss.currentTask) for currentTask
    tsem.o(.text.tSemNotify) refers to main.o(.text.tTaskSched) for tTaskSched
    tsem.o(.text.tSemNotify) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tsem.o(.ARM.exidx.text.tSemNotify) refers to tsem.o(.text.tSemNotify) for [Anonymous Symbol]
    tsem.o(.text.tSemGetInfo) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tsem.o(.text.tSemGetInfo) refers to tevent.o(.text.tEventWaitCount) for tEventWaitCount
    tsem.o(.text.tSemGetInfo) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tsem.o(.ARM.exidx.text.tSemGetInfo) refers to tsem.o(.text.tSemGetInfo) for [Anonymous Symbol]
    tsem.o(.text.tSemDestroy) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tsem.o(.text.tSemDestroy) refers to tevent.o(.text.tEventRemoveAll) for tEventRemoveAll
    tsem.o(.text.tSemDestroy) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tsem.o(.text.tSemDestroy) refers to main.o(.text.tTaskSched) for tTaskSched
    tsem.o(.ARM.exidx.text.tSemDestroy) refers to tsem.o(.text.tSemDestroy) for [Anonymous Symbol]
    tmbox.o(.text.tMboxInit) refers to tevent.o(.text.tEventInit) for tEventInit
    tmbox.o(.ARM.exidx.text.tMboxInit) refers to tmbox.o(.text.tMboxInit) for [Anonymous Symbol]
    tmbox.o(.text.tMboxWait) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tmbox.o(.text.tMboxWait) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tmbox.o(.text.tMboxWait) refers to main.o(.bss.currentTask) for currentTask
    tmbox.o(.text.tMboxWait) refers to tevent.o(.text.tEventWait) for tEventWait
    tmbox.o(.text.tMboxWait) refers to main.o(.text.tTaskSched) for tTaskSched
    tmbox.o(.ARM.exidx.text.tMboxWait) refers to tmbox.o(.text.tMboxWait) for [Anonymous Symbol]
    tmbox.o(.text.tMboxNoWaitGet) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tmbox.o(.text.tMboxNoWaitGet) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tmbox.o(.ARM.exidx.text.tMboxNoWaitGet) refers to tmbox.o(.text.tMboxNoWaitGet) for [Anonymous Symbol]
    tmbox.o(.text.tMboxNotify) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tmbox.o(.text.tMboxNotify) refers to tevent.o(.text.tEventWaitCount) for tEventWaitCount
    tmbox.o(.text.tMboxNotify) refers to tevent.o(.text.tEventWakeUp) for tEventWakeUp
    tmbox.o(.text.tMboxNotify) refers to main.o(.bss.currentTask) for currentTask
    tmbox.o(.text.tMboxNotify) refers to main.o(.text.tTaskSched) for tTaskSched
    tmbox.o(.text.tMboxNotify) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tmbox.o(.ARM.exidx.text.tMboxNotify) refers to tmbox.o(.text.tMboxNotify) for [Anonymous Symbol]
    tmbox.o(.text.tMboxFlush) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tmbox.o(.text.tMboxFlush) refers to tevent.o(.text.tEventWaitCount) for tEventWaitCount
    tmbox.o(.text.tMboxFlush) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tmbox.o(.ARM.exidx.text.tMboxFlush) refers to tmbox.o(.text.tMboxFlush) for [Anonymous Symbol]
    tmbox.o(.text.tMboxDestroy) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tmbox.o(.text.tMboxDestroy) refers to tevent.o(.text.tEventRemoveAll) for tEventRemoveAll
    tmbox.o(.text.tMboxDestroy) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tmbox.o(.text.tMboxDestroy) refers to main.o(.text.tTaskSched) for tTaskSched
    tmbox.o(.ARM.exidx.text.tMboxDestroy) refers to tmbox.o(.text.tMboxDestroy) for [Anonymous Symbol]
    tmbox.o(.text.tMboxGetInfo) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tmbox.o(.text.tMboxGetInfo) refers to tevent.o(.text.tEventWaitCount) for tEventWaitCount
    tmbox.o(.text.tMboxGetInfo) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tmbox.o(.ARM.exidx.text.tMboxGetInfo) refers to tmbox.o(.text.tMboxGetInfo) for [Anonymous Symbol]
    tmemblock.o(.text.tMemBlockInit) refers to tevent.o(.text.tEventInit) for tEventInit
    tmemblock.o(.text.tMemBlockInit) refers to tlist.o(.text.tListInit) for tListInit
    tmemblock.o(.text.tMemBlockInit) refers to tlist.o(.text.tNodeInit) for tNodeInit
    tmemblock.o(.text.tMemBlockInit) refers to tlist.o(.text.tListAddLast) for tListAddLast
    tmemblock.o(.ARM.exidx.text.tMemBlockInit) refers to tmemblock.o(.text.tMemBlockInit) for [Anonymous Symbol]
    tmemblock.o(.text.tMemBlockWait) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tmemblock.o(.text.tMemBlockWait) refers to tlist.o(.text.tListCount) for tListCount
    tmemblock.o(.text.tMemBlockWait) refers to tlist.o(.text.tListRemoveFirst) for tListRemoveFirst
    tmemblock.o(.text.tMemBlockWait) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tmemblock.o(.text.tMemBlockWait) refers to main.o(.bss.currentTask) for currentTask
    tmemblock.o(.text.tMemBlockWait) refers to tevent.o(.text.tEventWait) for tEventWait
    tmemblock.o(.text.tMemBlockWait) refers to main.o(.text.tTaskSched) for tTaskSched
    tmemblock.o(.ARM.exidx.text.tMemBlockWait) refers to tmemblock.o(.text.tMemBlockWait) for [Anonymous Symbol]
    tmemblock.o(.text.tMemBlockNoWaitGet) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tmemblock.o(.text.tMemBlockNoWaitGet) refers to tlist.o(.text.tListCount) for tListCount
    tmemblock.o(.text.tMemBlockNoWaitGet) refers to tlist.o(.text.tListRemoveFirst) for tListRemoveFirst
    tmemblock.o(.text.tMemBlockNoWaitGet) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tmemblock.o(.ARM.exidx.text.tMemBlockNoWaitGet) refers to tmemblock.o(.text.tMemBlockNoWaitGet) for [Anonymous Symbol]
    tmemblock.o(.text.tMemBlockNotify) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tmemblock.o(.text.tMemBlockNotify) refers to tevent.o(.text.tEventWaitCount) for tEventWaitCount
    tmemblock.o(.text.tMemBlockNotify) refers to tevent.o(.text.tEventWakeUp) for tEventWakeUp
    tmemblock.o(.text.tMemBlockNotify) refers to main.o(.bss.currentTask) for currentTask
    tmemblock.o(.text.tMemBlockNotify) refers to main.o(.text.tTaskSched) for tTaskSched
    tmemblock.o(.text.tMemBlockNotify) refers to tlist.o(.text.tListAddLast) for tListAddLast
    tmemblock.o(.text.tMemBlockNotify) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tmemblock.o(.ARM.exidx.text.tMemBlockNotify) refers to tmemblock.o(.text.tMemBlockNotify) for [Anonymous Symbol]
    tmemblock.o(.text.tMemBlockGetInfo) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tmemblock.o(.text.tMemBlockGetInfo) refers to tlist.o(.text.tListCount) for tListCount
    tmemblock.o(.text.tMemBlockGetInfo) refers to tevent.o(.text.tEventWaitCount) for tEventWaitCount
    tmemblock.o(.text.tMemBlockGetInfo) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tmemblock.o(.ARM.exidx.text.tMemBlockGetInfo) refers to tmemblock.o(.text.tMemBlockGetInfo) for [Anonymous Symbol]
    tmemblock.o(.text.tMemBlockDestroy) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tmemblock.o(.text.tMemBlockDestroy) refers to tevent.o(.text.tEventRemoveAll) for tEventRemoveAll
    tmemblock.o(.text.tMemBlockDestroy) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tmemblock.o(.text.tMemBlockDestroy) refers to main.o(.text.tTaskSched) for tTaskSched
    tmemblock.o(.ARM.exidx.text.tMemBlockDestroy) refers to tmemblock.o(.text.tMemBlockDestroy) for [Anonymous Symbol]
    tflaggroup.o(.text.tFlagGroupInit) refers to tevent.o(.text.tEventInit) for tEventInit
    tflaggroup.o(.ARM.exidx.text.tFlagGroupInit) refers to tflaggroup.o(.text.tFlagGroupInit) for [Anonymous Symbol]
    tflaggroup.o(.text.tFlagGroupWait) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tflaggroup.o(.text.tFlagGroupWait) refers to tflaggroup.o(.text.tFlagGroupCheckAndConsume) for tFlagGroupCheckAndConsume
    tflaggroup.o(.text.tFlagGroupWait) refers to main.o(.bss.currentTask) for currentTask
    tflaggroup.o(.text.tFlagGroupWait) refers to tevent.o(.text.tEventWait) for tEventWait
    tflaggroup.o(.text.tFlagGroupWait) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tflaggroup.o(.text.tFlagGroupWait) refers to main.o(.text.tTaskSched) for tTaskSched
    tflaggroup.o(.ARM.exidx.text.tFlagGroupWait) refers to tflaggroup.o(.text.tFlagGroupWait) for [Anonymous Symbol]
    tflaggroup.o(.ARM.exidx.text.tFlagGroupCheckAndConsume) refers to tflaggroup.o(.text.tFlagGroupCheckAndConsume) for [Anonymous Symbol]
    tflaggroup.o(.text.tFlagGroupNoWaitGet) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tflaggroup.o(.text.tFlagGroupNoWaitGet) refers to tflaggroup.o(.text.tFlagGroupCheckAndConsume) for tFlagGroupCheckAndConsume
    tflaggroup.o(.text.tFlagGroupNoWaitGet) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tflaggroup.o(.ARM.exidx.text.tFlagGroupNoWaitGet) refers to tflaggroup.o(.text.tFlagGroupNoWaitGet) for [Anonymous Symbol]
    tflaggroup.o(.text.tFlagGroupNotify) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tflaggroup.o(.text.tFlagGroupNotify) refers to tflaggroup.o(.text.tFlagGroupCheckAndConsume) for tFlagGroupCheckAndConsume
    tflaggroup.o(.text.tFlagGroupNotify) refers to tevent.o(.text.tEventWakeUpTask) for tEventWakeUpTask
    tflaggroup.o(.text.tFlagGroupNotify) refers to main.o(.text.tTaskSched) for tTaskSched
    tflaggroup.o(.text.tFlagGroupNotify) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tflaggroup.o(.ARM.exidx.text.tFlagGroupNotify) refers to tflaggroup.o(.text.tFlagGroupNotify) for [Anonymous Symbol]
    tflaggroup.o(.text.tFlagGroupGetInfo) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tflaggroup.o(.text.tFlagGroupGetInfo) refers to tevent.o(.text.tEventWaitCount) for tEventWaitCount
    tflaggroup.o(.text.tFlagGroupGetInfo) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tflaggroup.o(.ARM.exidx.text.tFlagGroupGetInfo) refers to tflaggroup.o(.text.tFlagGroupGetInfo) for [Anonymous Symbol]
    tflaggroup.o(.text.tFlagGroupDestroy) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tflaggroup.o(.text.tFlagGroupDestroy) refers to tevent.o(.text.tEventRemoveAll) for tEventRemoveAll
    tflaggroup.o(.text.tFlagGroupDestroy) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tflaggroup.o(.text.tFlagGroupDestroy) refers to main.o(.text.tTaskSched) for tTaskSched
    tflaggroup.o(.ARM.exidx.text.tFlagGroupDestroy) refers to tflaggroup.o(.text.tFlagGroupDestroy) for [Anonymous Symbol]
    tmutex.o(.text.tMutexInit) refers to tevent.o(.text.tEventInit) for tEventInit
    tmutex.o(.ARM.exidx.text.tMutexInit) refers to tmutex.o(.text.tMutexInit) for [Anonymous Symbol]
    tmutex.o(.text.tMutexWait) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tmutex.o(.text.tMutexWait) refers to main.o(.bss.currentTask) for currentTask
    tmutex.o(.text.tMutexWait) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tmutex.o(.text.tMutexWait) refers to main.o(.text.tTaskSchedUnRdy) for tTaskSchedUnRdy
    tmutex.o(.text.tMutexWait) refers to main.o(.text.tTaskSchedRdy) for tTaskSchedRdy
    tmutex.o(.text.tMutexWait) refers to tevent.o(.text.tEventWait) for tEventWait
    tmutex.o(.text.tMutexWait) refers to main.o(.text.tTaskSched) for tTaskSched
    tmutex.o(.ARM.exidx.text.tMutexWait) refers to tmutex.o(.text.tMutexWait) for [Anonymous Symbol]
    tmutex.o(.text.tMutexNoWaitGet) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tmutex.o(.text.tMutexNoWaitGet) refers to main.o(.bss.currentTask) for currentTask
    tmutex.o(.text.tMutexNoWaitGet) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tmutex.o(.ARM.exidx.text.tMutexNoWaitGet) refers to tmutex.o(.text.tMutexNoWaitGet) for [Anonymous Symbol]
    tmutex.o(.text.tMutexNotify) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tmutex.o(.text.tMutexNotify) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tmutex.o(.text.tMutexNotify) refers to main.o(.bss.currentTask) for currentTask
    tmutex.o(.text.tMutexNotify) refers to main.o(.text.tTaskSchedUnRdy) for tTaskSchedUnRdy
    tmutex.o(.text.tMutexNotify) refers to main.o(.text.tTaskSchedRdy) for tTaskSchedRdy
    tmutex.o(.text.tMutexNotify) refers to tevent.o(.text.tEventWaitCount) for tEventWaitCount
    tmutex.o(.text.tMutexNotify) refers to tevent.o(.text.tEventWakeUp) for tEventWakeUp
    tmutex.o(.text.tMutexNotify) refers to main.o(.text.tTaskSched) for tTaskSched
    tmutex.o(.ARM.exidx.text.tMutexNotify) refers to tmutex.o(.text.tMutexNotify) for [Anonymous Symbol]
    tmutex.o(.text.tMutexDestroy) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tmutex.o(.text.tMutexDestroy) refers to main.o(.text.tTaskSchedUnRdy) for tTaskSchedUnRdy
    tmutex.o(.text.tMutexDestroy) refers to main.o(.text.tTaskSchedRdy) for tTaskSchedRdy
    tmutex.o(.text.tMutexDestroy) refers to tevent.o(.text.tEventRemoveAll) for tEventRemoveAll
    tmutex.o(.text.tMutexDestroy) refers to main.o(.text.tTaskSched) for tTaskSched
    tmutex.o(.text.tMutexDestroy) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tmutex.o(.ARM.exidx.text.tMutexDestroy) refers to tmutex.o(.text.tMutexDestroy) for [Anonymous Symbol]
    tmutex.o(.text.tMutexGetInfo) refers to switch.o(.text.tTaskEnterCritical) for tTaskEnterCritical
    tmutex.o(.text.tMutexGetInfo) refers to tevent.o(.text.tEventWaitCount) for tEventWaitCount
    tmutex.o(.text.tMutexGetInfo) refers to switch.o(.text.tTaskExitCritical) for tTaskExitCritical
    tmutex.o(.ARM.exidx.text.tMutexGetInfo) refers to tmutex.o(.text.tMutexGetInfo) for [Anonymous Symbol]
    ttimer.o(.text.tTimerInit) refers to tlist.o(.text.tNodeInit) for tNodeInit
    ttimer.o(.ARM.exidx.text.tTimerInit) refers to ttimer.o(.text.tTimerInit) for [Anonymous Symbol]
    startup_armcm3.o(.ARM.exidx.text.Default_Handler) refers to startup_armcm3.o(.text.Default_Handler) for [Anonymous Symbol]
    startup_armcm3.o(.text.Reset_Handler) refers to system_armcm3.o(.text.SystemInit) for SystemInit
    startup_armcm3.o(.text.Reset_Handler) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    startup_armcm3.o(.ARM.exidx.text.Reset_Handler) refers to startup_armcm3.o(.text.Reset_Handler) for [Anonymous Symbol]
    startup_armcm3.o(.ARM.exidx.text.HardFault_Handler) refers to startup_armcm3.o(.text.HardFault_Handler) for [Anonymous Symbol]
    startup_armcm3.o(RESET) refers to startup_armcm3.o(.text.Reset_Handler) for Reset_Handler
    startup_armcm3.o(RESET) refers to startup_armcm3.o(.text.Default_Handler) for NMI_Handler
    startup_armcm3.o(RESET) refers to startup_armcm3.o(.text.HardFault_Handler) for HardFault_Handler
    startup_armcm3.o(RESET) refers to cortex.o(.text) for PendSV_Handler
    startup_armcm3.o(RESET) refers to tcpu.o(.text.SysTick_Handler) for SysTick_Handler
    system_armcm3.o(.text.SystemCoreClockUpdate) refers to system_armcm3.o(.data.SystemCoreClock) for SystemCoreClock
    system_armcm3.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_armcm3.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_armcm3.o(.text.SystemInit) refers to startup_armcm3.o(RESET) for __Vectors
    system_armcm3.o(.text.SystemInit) refers to system_armcm3.o(.data.SystemCoreClock) for SystemCoreClock
    system_armcm3.o(.ARM.exidx.text.SystemInit) refers to system_armcm3.o(.text.SystemInit) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry4.o(.ARM.Collect$$$$00000003) for _main_stk
    entry4.o(.ARM.Collect$$$$00000003) refers to entry4.o(.ARM.Collect$$$$00002714) for __lit__00000000
    entry4.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.tTaskHighestReady), (8 bytes).
    Removing main.o(.ARM.exidx.text.tTaskSchedInit), (8 bytes).
    Removing main.o(.text.tTaskSchedDisable), (52 bytes).
    Removing main.o(.ARM.exidx.text.tTaskSchedDisable), (8 bytes).
    Removing main.o(.text.tTaskSchedEnable), (64 bytes).
    Removing main.o(.ARM.exidx.text.tTaskSchedEnable), (8 bytes).
    Removing main.o(.ARM.exidx.text.tTaskSched), (8 bytes).
    Removing main.o(.ARM.exidx.text.tTaskSchedRdy), (8 bytes).
    Removing main.o(.ARM.exidx.text.tTaskSchedUnRdy), (8 bytes).
    Removing main.o(.text.tTaskSchedRemove), (78 bytes).
    Removing main.o(.ARM.exidx.text.tTaskSchedRemove), (8 bytes).
    Removing main.o(.ARM.exidx.text.tTaskDelayedInit), (8 bytes).
    Removing main.o(.ARM.exidx.text.tTimeTaskWait), (8 bytes).
    Removing main.o(.ARM.exidx.text.tTimeTaskWakeUp), (8 bytes).
    Removing main.o(.text.tTimeTaskRemove), (28 bytes).
    Removing main.o(.ARM.exidx.text.tTimeTaskRemove), (8 bytes).
    Removing main.o(.ARM.exidx.text.tTaskSystemTickHandler), (8 bytes).
    Removing main.o(.ARM.exidx.text.idleTaskEntry), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.bss.idleTask), (4 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing app.o(.text), (0 bytes).
    Removing app.o(.ARM.exidx.text.task1Entry), (8 bytes).
    Removing app.o(.ARM.exidx.text.task2Entry), (8 bytes).
    Removing app.o(.ARM.exidx.text.task3Entry), (8 bytes).
    Removing app.o(.ARM.exidx.text.tInitApp), (8 bytes).
    Removing switch.o(.text), (0 bytes).
    Removing switch.o(.ARM.exidx.text.tTaskEnterCritical), (8 bytes).
    Removing switch.o(.ARM.exidx.text.tTaskExitCritical), (8 bytes).
    Removing switch.o(.ARM.exidx.text.tTaskRunFirst), (8 bytes).
    Removing switch.o(.ARM.exidx.text.tTaskSwitch), (8 bytes).
    Removing tbitmap.o(.text), (0 bytes).
    Removing tbitmap.o(.text.tBitmapInit), (14 bytes).
    Removing tbitmap.o(.ARM.exidx.text.tBitmapInit), (8 bytes).
    Removing tbitmap.o(.ARM.exidx.text.tBitmapPosCount), (8 bytes).
    Removing tbitmap.o(.ARM.exidx.text.tBitmapSet), (8 bytes).
    Removing tbitmap.o(.ARM.exidx.text.tBitmapClear), (8 bytes).
    Removing tbitmap.o(.ARM.exidx.text.tBitmapGetFirstSet), (8 bytes).
    Removing tlist.o(.text), (0 bytes).
    Removing tlist.o(.ARM.exidx.text.tNodeInit), (8 bytes).
    Removing tlist.o(.ARM.exidx.text.tListInit), (8 bytes).
    Removing tlist.o(.ARM.exidx.text.tListCount), (8 bytes).
    Removing tlist.o(.ARM.exidx.text.tListFirst), (8 bytes).
    Removing tlist.o(.text.tListLast), (30 bytes).
    Removing tlist.o(.ARM.exidx.text.tListLast), (8 bytes).
    Removing tlist.o(.text.tListPpre), (36 bytes).
    Removing tlist.o(.ARM.exidx.text.tListPpre), (8 bytes).
    Removing tlist.o(.text.tListNext), (36 bytes).
    Removing tlist.o(.ARM.exidx.text.tListNext), (8 bytes).
    Removing tlist.o(.text.tListRemoveAll), (70 bytes).
    Removing tlist.o(.ARM.exidx.text.tListRemoveAll), (8 bytes).
    Removing tlist.o(.text.tListAddFirst), (50 bytes).
    Removing tlist.o(.ARM.exidx.text.tListAddFirst), (8 bytes).
    Removing tlist.o(.ARM.exidx.text.tListAddLast), (8 bytes).
    Removing tlist.o(.ARM.exidx.text.tListRemoveFirst), (8 bytes).
    Removing tlist.o(.text.tListInsertAfter), (48 bytes).
    Removing tlist.o(.ARM.exidx.text.tListInsertAfter), (8 bytes).
    Removing tlist.o(.ARM.exidx.text.tListRemove), (8 bytes).
    Removing ttask.o(.text), (0 bytes).
    Removing ttask.o(.ARM.exidx.text.tTaskInit), (8 bytes).
    Removing ttask.o(.text.tTaskSuspend), (92 bytes).
    Removing ttask.o(.ARM.exidx.text.tTaskSuspend), (8 bytes).
    Removing ttask.o(.text.tTaskWakeUp), (70 bytes).
    Removing ttask.o(.ARM.exidx.text.tTaskWakeUp), (8 bytes).
    Removing ttask.o(.text.tTaskSetCleanCallFun), (24 bytes).
    Removing ttask.o(.ARM.exidx.text.tTaskSetCleanCallFun), (8 bytes).
    Removing ttask.o(.text.tTaskForceDelete), (106 bytes).
    Removing ttask.o(.ARM.exidx.text.tTaskForceDelete), (8 bytes).
    Removing ttask.o(.text.tTaskRequestDelete), (30 bytes).
    Removing ttask.o(.ARM.exidx.text.tTaskRequestDelete), (8 bytes).
    Removing ttask.o(.text.tTaskIsRequestedDeleted), (42 bytes).
    Removing ttask.o(.ARM.exidx.text.tTaskIsRequestedDeleted), (8 bytes).
    Removing ttask.o(.text.tTaskDeleteSelf), (68 bytes).
    Removing ttask.o(.ARM.exidx.text.tTaskDeleteSelf), (8 bytes).
    Removing ttask.o(.text.tTaskGetInfo), (64 bytes).
    Removing ttask.o(.ARM.exidx.text.tTaskGetInfo), (8 bytes).
    Removing ttime.o(.text), (0 bytes).
    Removing ttime.o(.ARM.exidx.text.tTaskDelay), (8 bytes).
    Removing tcpu.o(.text), (0 bytes).
    Removing tcpu.o(.ARM.exidx.text.tSetSysTickPeriod), (8 bytes).
    Removing tcpu.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing tcpu.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing tevent.o(.text), (0 bytes).
    Removing tevent.o(.text.tEventInit), (26 bytes).
    Removing tevent.o(.ARM.exidx.text.tEventInit), (8 bytes).
    Removing tevent.o(.text.tEventWait), (90 bytes).
    Removing tevent.o(.ARM.exidx.text.tEventWait), (8 bytes).
    Removing tevent.o(.text.tEventWakeUp), (104 bytes).
    Removing tevent.o(.ARM.exidx.text.tEventWakeUp), (8 bytes).
    Removing tevent.o(.text.tEventWakeUpTask), (90 bytes).
    Removing tevent.o(.ARM.exidx.text.tEventWakeUpTask), (8 bytes).
    Removing tevent.o(.ARM.exidx.text.tEventRemoveTask), (8 bytes).
    Removing tevent.o(.text.tEventRemoveAll), (116 bytes).
    Removing tevent.o(.ARM.exidx.text.tEventRemoveAll), (8 bytes).
    Removing tevent.o(.text.tEventWaitCount), (38 bytes).
    Removing tevent.o(.ARM.exidx.text.tEventWaitCount), (8 bytes).
    Removing tsem.o(.text), (0 bytes).
    Removing tsem.o(.text.tSemInit), (74 bytes).
    Removing tsem.o(.ARM.exidx.text.tSemInit), (8 bytes).
    Removing tsem.o(.text.tSemWait), (98 bytes).
    Removing tsem.o(.ARM.exidx.text.tSemWait), (8 bytes).
    Removing tsem.o(.text.tSemNoWaitGet), (58 bytes).
    Removing tsem.o(.ARM.exidx.text.tSemNoWaitGet), (8 bytes).
    Removing tsem.o(.text.tSemNotify), (112 bytes).
    Removing tsem.o(.ARM.exidx.text.tSemNotify), (8 bytes).
    Removing tsem.o(.text.tSemGetInfo), (50 bytes).
    Removing tsem.o(.ARM.exidx.text.tSemGetInfo), (8 bytes).
    Removing tsem.o(.text.tSemDestroy), (58 bytes).
    Removing tsem.o(.ARM.exidx.text.tSemDestroy), (8 bytes).
    Removing tmbox.o(.text), (0 bytes).
    Removing tmbox.o(.text.tMboxInit), (50 bytes).
    Removing tmbox.o(.ARM.exidx.text.tMboxInit), (8 bytes).
    Removing tmbox.o(.text.tMboxWait), (146 bytes).
    Removing tmbox.o(.ARM.exidx.text.tMboxWait), (8 bytes).
    Removing tmbox.o(.text.tMboxNoWaitGet), (98 bytes).
    Removing tmbox.o(.ARM.exidx.text.tMboxNoWaitGet), (8 bytes).
    Removing tmbox.o(.text.tMboxNotify), (218 bytes).
    Removing tmbox.o(.ARM.exidx.text.tMboxNotify), (8 bytes).
    Removing tmbox.o(.text.tMboxFlush), (48 bytes).
    Removing tmbox.o(.ARM.exidx.text.tMboxFlush), (8 bytes).
    Removing tmbox.o(.text.tMboxDestroy), (48 bytes).
    Removing tmbox.o(.ARM.exidx.text.tMboxDestroy), (8 bytes).
    Removing tmbox.o(.text.tMboxGetInfo), (50 bytes).
    Removing tmbox.o(.ARM.exidx.text.tMboxGetInfo), (8 bytes).
    Removing tmemblock.o(.text), (0 bytes).
    Removing tmemblock.o(.text.tMemBlockInit), (116 bytes).
    Removing tmemblock.o(.ARM.exidx.text.tMemBlockInit), (8 bytes).
    Removing tmemblock.o(.text.tMemBlockWait), (116 bytes).
    Removing tmemblock.o(.ARM.exidx.text.tMemBlockWait), (8 bytes).
    Removing tmemblock.o(.text.tMemBlockNoWaitGet), (68 bytes).
    Removing tmemblock.o(.ARM.exidx.text.tMemBlockNoWaitGet), (8 bytes).
    Removing tmemblock.o(.text.tMemBlockNotify), (88 bytes).
    Removing tmemblock.o(.ARM.exidx.text.tMemBlockNotify), (8 bytes).
    Removing tmemblock.o(.text.tMemBlockGetInfo), (62 bytes).
    Removing tmemblock.o(.ARM.exidx.text.tMemBlockGetInfo), (8 bytes).
    Removing tmemblock.o(.text.tMemBlockDestroy), (50 bytes).
    Removing tmemblock.o(.ARM.exidx.text.tMemBlockDestroy), (8 bytes).
    Removing tflaggroup.o(.text), (0 bytes).
    Removing tflaggroup.o(.text.tFlagGroupInit), (28 bytes).
    Removing tflaggroup.o(.ARM.exidx.text.tFlagGroupInit), (8 bytes).
    Removing tflaggroup.o(.text.tFlagGroupWait), (134 bytes).
    Removing tflaggroup.o(.ARM.exidx.text.tFlagGroupWait), (8 bytes).
    Removing tflaggroup.o(.text.tFlagGroupCheckAndConsume), (168 bytes).
    Removing tflaggroup.o(.ARM.exidx.text.tFlagGroupCheckAndConsume), (8 bytes).
    Removing tflaggroup.o(.text.tFlagGroupNoWaitGet), (52 bytes).
    Removing tflaggroup.o(.ARM.exidx.text.tFlagGroupNoWaitGet), (8 bytes).
    Removing tflaggroup.o(.text.tFlagGroupNotify), (178 bytes).
    Removing tflaggroup.o(.ARM.exidx.text.tFlagGroupNotify), (8 bytes).
    Removing tflaggroup.o(.text.tFlagGroupGetInfo), (42 bytes).
    Removing tflaggroup.o(.ARM.exidx.text.tFlagGroupGetInfo), (8 bytes).
    Removing tflaggroup.o(.text.tFlagGroupDestroy), (48 bytes).
    Removing tflaggroup.o(.ARM.exidx.text.tFlagGroupDestroy), (8 bytes).
    Removing tmutex.o(.text), (0 bytes).
    Removing tmutex.o(.text.tMutexInit), (36 bytes).
    Removing tmutex.o(.ARM.exidx.text.tMutexInit), (8 bytes).
    Removing tmutex.o(.text.tMutexWait), (248 bytes).
    Removing tmutex.o(.ARM.exidx.text.tMutexWait), (8 bytes).
    Removing tmutex.o(.text.tMutexNoWaitGet), (120 bytes).
    Removing tmutex.o(.ARM.exidx.text.tMutexNoWaitGet), (8 bytes).
    Removing tmutex.o(.text.tMutexNotify), (258 bytes).
    Removing tmutex.o(.ARM.exidx.text.tMutexNotify), (8 bytes).
    Removing tmutex.o(.text.tMutexDestroy), (124 bytes).
    Removing tmutex.o(.ARM.exidx.text.tMutexDestroy), (8 bytes).
    Removing tmutex.o(.text.tMutexGetInfo), (86 bytes).
    Removing tmutex.o(.ARM.exidx.text.tMutexGetInfo), (8 bytes).
    Removing ttimer.o(.text), (0 bytes).
    Removing ttimer.o(.text.tTimerInit), (90 bytes).
    Removing ttimer.o(.ARM.exidx.text.tTimerInit), (8 bytes).
    Removing startup_armcm3.o(.text), (0 bytes).
    Removing startup_armcm3.o(.ARM.exidx.text.Default_Handler), (8 bytes).
    Removing startup_armcm3.o(.ARM.exidx.text.Reset_Handler), (8 bytes).
    Removing startup_armcm3.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing system_armcm3.o(.text), (0 bytes).
    Removing system_armcm3.o(.text.SystemCoreClockUpdate), (20 bytes).
    Removing system_armcm3.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_armcm3.o(.ARM.exidx.text.SystemInit), (8 bytes).

177 unused section(s) (total 5506 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry4.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    Source/cortex.s                          0x00000000   Number         0  cortex.o ABSOLUTE
    __tagsym$$used.0                         0x00000000   Number         0  startup_armcm3.o(RESET)
    app.c                                    0x00000000   Number         0  app.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    startup_ARMCM3.c                         0x00000000   Number         0  startup_armcm3.o ABSOLUTE
    switch.c                                 0x00000000   Number         0  switch.o ABSOLUTE
    system_ARMCM3.c                          0x00000000   Number         0  system_armcm3.o ABSOLUTE
    tBitmap.c                                0x00000000   Number         0  tbitmap.o ABSOLUTE
    tCpu.c                                   0x00000000   Number         0  tcpu.o ABSOLUTE
    tEvent.c                                 0x00000000   Number         0  tevent.o ABSOLUTE
    tFlagGroup.c                             0x00000000   Number         0  tflaggroup.o ABSOLUTE
    tList.c                                  0x00000000   Number         0  tlist.o ABSOLUTE
    tMbox.c                                  0x00000000   Number         0  tmbox.o ABSOLUTE
    tMemBlock.c                              0x00000000   Number         0  tmemblock.o ABSOLUTE
    tMutex.c                                 0x00000000   Number         0  tmutex.o ABSOLUTE
    tSem.c                                   0x00000000   Number         0  tsem.o ABSOLUTE
    tTask.c                                  0x00000000   Number         0  ttask.o ABSOLUTE
    tTime.c                                  0x00000000   Number         0  ttime.o ABSOLUTE
    tTimer.c                                 0x00000000   Number         0  ttimer.o ABSOLUTE
    .ARM.Collect$$$$00000000                 0x000003c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000003                 0x000003c0   Section        4  entry4.o(.ARM.Collect$$$$00000003)
    .ARM.Collect$$$$00000004                 0x000003c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000003c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000003c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000003c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x000003d0   Data           4  entry4.o(.ARM.Collect$$$$00002714)
    .ARM.Collect$$$$0000000D                 0x000003d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x000003d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002714                 0x000003d0   Section        4  entry4.o(.ARM.Collect$$$$00002714)
    .text                                    0x000003d4   Section       48  cortex.o(.text)
    .text                                    0x00000404   Section       48  init.o(.text)
    [Anonymous Symbol]                       0x00000434   Section        0  startup_armcm3.o(.text.Default_Handler)
    [Anonymous Symbol]                       0x00000438   Section        0  startup_armcm3.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x0000043c   Section        0  startup_armcm3.o(.text.Reset_Handler)
    [Anonymous Symbol]                       0x00000444   Section        0  tcpu.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x0000044c   Section        0  system_armcm3.o(.text.SystemInit)
    __NVIC_SetPriority                       0x00000475   Thumb Code    66  tcpu.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x00000474   Section        0  tcpu.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x000004b8   Section        0  main.o(.text.idleTaskEntry)
    [Anonymous Symbol]                       0x000004c0   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x00000518   Section        0  tbitmap.o(.text.tBitmapClear)
    [Anonymous Symbol]                       0x00000534   Section        0  tbitmap.o(.text.tBitmapGetFirstSet)
    [Anonymous Symbol]                       0x000005b8   Section        0  tbitmap.o(.text.tBitmapPosCount)
    [Anonymous Symbol]                       0x000005bc   Section        0  tbitmap.o(.text.tBitmapSet)
    [Anonymous Symbol]                       0x000005d8   Section        0  tevent.o(.text.tEventRemoveTask)
    [Anonymous Symbol]                       0x0000061c   Section        0  app.o(.text.tInitApp)
    [Anonymous Symbol]                       0x000006a4   Section        0  tlist.o(.text.tListAddLast)
    [Anonymous Symbol]                       0x000006d4   Section        0  tlist.o(.text.tListCount)
    [Anonymous Symbol]                       0x000006e0   Section        0  tlist.o(.text.tListFirst)
    [Anonymous Symbol]                       0x00000700   Section        0  tlist.o(.text.tListInit)
    [Anonymous Symbol]                       0x00000718   Section        0  tlist.o(.text.tListRemove)
    [Anonymous Symbol]                       0x0000073c   Section        0  tlist.o(.text.tListRemoveFirst)
    [Anonymous Symbol]                       0x00000774   Section        0  tlist.o(.text.tNodeInit)
    [Anonymous Symbol]                       0x00000784   Section        0  tcpu.o(.text.tSetSysTickPeriod)
    [Anonymous Symbol]                       0x000007dc   Section        0  ttime.o(.text.tTaskDelay)
    [Anonymous Symbol]                       0x00000810   Section        0  main.o(.text.tTaskDelayedInit)
    [Anonymous Symbol]                       0x00000820   Section        0  switch.o(.text.tTaskEnterCritical)
    [Anonymous Symbol]                       0x00000834   Section        0  switch.o(.text.tTaskExitCritical)
    [Anonymous Symbol]                       0x00000848   Section        0  main.o(.text.tTaskHighestReady)
    [Anonymous Symbol]                       0x0000087c   Section        0  ttask.o(.text.tTaskInit)
    [Anonymous Symbol]                       0x000009a0   Section        0  switch.o(.text.tTaskRunFirst)
    [Anonymous Symbol]                       0x000009cc   Section        0  main.o(.text.tTaskSched)
    [Anonymous Symbol]                       0x00000a24   Section        0  main.o(.text.tTaskSchedInit)
    [Anonymous Symbol]                       0x00000a64   Section        0  main.o(.text.tTaskSchedRdy)
    [Anonymous Symbol]                       0x00000a98   Section        0  main.o(.text.tTaskSchedUnRdy)
    [Anonymous Symbol]                       0x00000ae8   Section        0  switch.o(.text.tTaskSwitch)
    [Anonymous Symbol]                       0x00000af8   Section        0  main.o(.text.tTaskSystemTickHandler)
    [Anonymous Symbol]                       0x00000bec   Section        0  main.o(.text.tTimeTaskWait)
    [Anonymous Symbol]                       0x00000c1c   Section        0  main.o(.text.tTimeTaskWakeUp)
    [Anonymous Symbol]                       0x00000c44   Section        0  app.o(.text.task1Entry)
    [Anonymous Symbol]                       0x00000c74   Section        0  app.o(.text.task2Entry)
    [Anonymous Symbol]                       0x00000ca0   Section        0  app.o(.text.task3Entry)
    i.__scatterload_copy                     0x00000cca   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00000cd8   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00000cda   Section       14  handlers.o(i.__scatterload_zeroinit)
    tBitmapGetFirstSet.quickFindTable        0x00000ce8   Data         256  tbitmap.o(.rodata.tBitmapGetFirstSet.quickFindTable)
    [Anonymous Symbol]                       0x00000ce8   Section        0  tbitmap.o(.rodata.tBitmapGetFirstSet.quickFindTable)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data         960  startup_armcm3.o(RESET)
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __main                                   0x000003c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000003c1   Thumb Code     0  entry4.o(.ARM.Collect$$$$00000003)
    _main_scatterload                        0x000003c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000003c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000003c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000003c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000003c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x000003d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x000003d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    PendSV_Handler                           0x000003d5   Thumb Code    40  cortex.o(.text)
    __scatterload                            0x00000405   Thumb Code    38  init.o(.text)
    __scatterload_rt2                        0x00000405   Thumb Code     0  init.o(.text)
    BusFault_Handler                         0x00000435   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    DebugMon_Handler                         0x00000435   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    Default_Handler                          0x00000435   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    Interrupt0_Handler                       0x00000435   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    Interrupt1_Handler                       0x00000435   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    Interrupt2_Handler                       0x00000435   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    Interrupt3_Handler                       0x00000435   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    Interrupt4_Handler                       0x00000435   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    Interrupt5_Handler                       0x00000435   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    Interrupt6_Handler                       0x00000435   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    Interrupt7_Handler                       0x00000435   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    Interrupt8_Handler                       0x00000435   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    Interrupt9_Handler                       0x00000435   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    MemManage_Handler                        0x00000435   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    NMI_Handler                              0x00000435   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    SVC_Handler                              0x00000435   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    UsageFault_Handler                       0x00000435   Thumb Code     4  startup_armcm3.o(.text.Default_Handler)
    HardFault_Handler                        0x00000439   Thumb Code     4  startup_armcm3.o(.text.HardFault_Handler)
    Reset_Handler                            0x0000043d   Thumb Code     8  startup_armcm3.o(.text.Reset_Handler)
    SysTick_Handler                          0x00000445   Thumb Code     8  tcpu.o(.text.SysTick_Handler)
    SystemInit                               0x0000044d   Thumb Code    38  system_armcm3.o(.text.SystemInit)
    idleTaskEntry                            0x000004b9   Thumb Code     8  main.o(.text.idleTaskEntry)
    main                                     0x000004c1   Thumb Code    86  main.o(.text.main)
    tBitmapClear                             0x00000519   Thumb Code    26  tbitmap.o(.text.tBitmapClear)
    tBitmapGetFirstSet                       0x00000535   Thumb Code   130  tbitmap.o(.text.tBitmapGetFirstSet)
    tBitmapPosCount                          0x000005b9   Thumb Code     4  tbitmap.o(.text.tBitmapPosCount)
    tBitmapSet                               0x000005bd   Thumb Code    26  tbitmap.o(.text.tBitmapSet)
    tEventRemoveTask                         0x000005d9   Thumb Code    66  tevent.o(.text.tEventRemoveTask)
    tInitApp                                 0x0000061d   Thumb Code   136  app.o(.text.tInitApp)
    tListAddLast                             0x000006a5   Thumb Code    46  tlist.o(.text.tListAddLast)
    tListCount                               0x000006d5   Thumb Code    12  tlist.o(.text.tListCount)
    tListFirst                               0x000006e1   Thumb Code    30  tlist.o(.text.tListFirst)
    tListInit                                0x00000701   Thumb Code    22  tlist.o(.text.tListInit)
    tListRemove                              0x00000719   Thumb Code    34  tlist.o(.text.tListRemove)
    tListRemoveFirst                         0x0000073d   Thumb Code    54  tlist.o(.text.tListRemoveFirst)
    tNodeInit                                0x00000775   Thumb Code    16  tlist.o(.text.tNodeInit)
    tSetSysTickPeriod                        0x00000785   Thumb Code    86  tcpu.o(.text.tSetSysTickPeriod)
    tTaskDelay                               0x000007dd   Thumb Code    52  ttime.o(.text.tTaskDelay)
    tTaskDelayedInit                         0x00000811   Thumb Code    16  main.o(.text.tTaskDelayedInit)
    tTaskEnterCritical                       0x00000821   Thumb Code    20  switch.o(.text.tTaskEnterCritical)
    tTaskExitCritical                        0x00000835   Thumb Code    18  switch.o(.text.tTaskExitCritical)
    tTaskHighestReady                        0x00000849   Thumb Code    50  main.o(.text.tTaskHighestReady)
    tTaskInit                                0x0000087d   Thumb Code   290  ttask.o(.text.tTaskInit)
    tTaskRunFirst                            0x000009a1   Thumb Code    42  switch.o(.text.tTaskRunFirst)
    tTaskSched                               0x000009cd   Thumb Code    88  main.o(.text.tTaskSched)
    tTaskSchedInit                           0x00000a25   Thumb Code    64  main.o(.text.tTaskSchedInit)
    tTaskSchedRdy                            0x00000a65   Thumb Code    52  main.o(.text.tTaskSchedRdy)
    tTaskSchedUnRdy                          0x00000a99   Thumb Code    78  main.o(.text.tTaskSchedUnRdy)
    tTaskSwitch                              0x00000ae9   Thumb Code    16  switch.o(.text.tTaskSwitch)
    tTaskSystemTickHandler                   0x00000af9   Thumb Code   242  main.o(.text.tTaskSystemTickHandler)
    tTimeTaskWait                            0x00000bed   Thumb Code    46  main.o(.text.tTimeTaskWait)
    tTimeTaskWakeUp                          0x00000c1d   Thumb Code    38  main.o(.text.tTimeTaskWakeUp)
    task1Entry                               0x00000c45   Thumb Code    48  app.o(.text.task1Entry)
    task2Entry                               0x00000c75   Thumb Code    42  app.o(.text.task2Entry)
    task3Entry                               0x00000ca1   Thumb Code    42  app.o(.text.task3Entry)
    __scatterload_copy                       0x00000ccb   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00000cd9   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00000cdb   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    Region$$Table$$Base                      0x00000de8   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00000e08   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_armcm3.o(.data.SystemCoreClock)
    currentTask                              0x20000004   Data           4  main.o(.bss.currentTask)
    idleTaskEnv                              0x20000008   Data        4096  main.o(.bss.idleTaskEnv)
    nextTask                                 0x20001008   Data           4  main.o(.bss.nextTask)
    schedLockCount                           0x2000100c   Data           1  main.o(.bss.schedLockCount)
    tTask1                                   0x20001010   Data          72  app.o(.bss.tTask1)
    tTask2                                   0x20001058   Data          72  app.o(.bss.tTask2)
    tTask3                                   0x200010a0   Data          72  app.o(.bss.tTask3)
    tTaskDelayedList                         0x200010e8   Data          12  main.o(.bss.tTaskDelayedList)
    tTaskIdle                                0x200010f4   Data          72  main.o(.bss.tTaskIdle)
    task1Env                                 0x2000113c   Data        4096  app.o(.bss.task1Env)
    task1Flag                                0x2000213c   Data           4  app.o(.bss.task1Flag)
    task2Env                                 0x20002140   Data        4096  app.o(.bss.task2Env)
    task2Flag                                0x20003140   Data           4  app.o(.bss.task2Flag)
    task3Env                                 0x20003144   Data        4096  app.o(.bss.task3Env)
    task3Flag                                0x20004144   Data           4  app.o(.bss.task3Flag)
    taskPrioBitmap                           0x20004148   Data           4  main.o(.bss.taskPrioBitmap)
    taskTable                                0x2000414c   Data         384  main.o(.bss.taskTable)
    Image$$ARM_LIB_STACK$$ZI$$Limit          0x20040000   Number         0  anon$$obj.o ABSOLUTE



==============================================================================

Memory Map of the image

  Image Entry point : 0x000003c1

  Load Region LR_ROM (Base: 0x00000000, Size: 0x00000e0c, Max: 0x00080000, ABSOLUTE)

    Execution Region ER_ROM (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00000e08, Max: 0x00080000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000003c0   Data   RO          327    RESET               startup_armcm3.o
    0x000003c0   0x000003c0   0x00000000   Code   RO          346  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x000003c0   0x000003c0   0x00000004   Code   RO          349    .ARM.Collect$$$$00000003  mc_w.l(entry4.o)
    0x000003c4   0x000003c4   0x00000004   Code   RO          352    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x000003c8   0x000003c8   0x00000000   Code   RO          354    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x000003c8   0x000003c8   0x00000000   Code   RO          356    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x000003c8   0x000003c8   0x00000008   Code   RO          357    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x000003d0   0x000003d0   0x00000000   Code   RO          359    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x000003d0   0x000003d0   0x00000000   Code   RO          361    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x000003d0   0x000003d0   0x00000004   Code   RO          350    .ARM.Collect$$$$00002714  mc_w.l(entry4.o)
    0x000003d4   0x000003d4   0x00000030   Code   RO           74    .text               cortex.o
    0x00000404   0x00000404   0x00000030   Code   RO          363    .text               mc_w.l(init.o)
    0x00000434   0x00000434   0x00000004   Code   RO          321    .text.Default_Handler  startup_armcm3.o
    0x00000438   0x00000438   0x00000004   Code   RO          325    .text.HardFault_Handler  startup_armcm3.o
    0x0000043c   0x0000043c   0x00000008   Code   RO          323    .text.Reset_Handler  startup_armcm3.o
    0x00000444   0x00000444   0x00000008   Code   RO          184    .text.SysTick_Handler  tcpu.o
    0x0000044c   0x0000044c   0x00000026   Code   RO          337    .text.SystemInit    system_armcm3.o
    0x00000472   0x00000472   0x00000002   PAD
    0x00000474   0x00000474   0x00000042   Code   RO          182    .text.__NVIC_SetPriority  tcpu.o
    0x000004b6   0x000004b6   0x00000002   PAD
    0x000004b8   0x000004b8   0x00000008   Code   RO           30    .text.idleTaskEntry  main.o
    0x000004c0   0x000004c0   0x00000056   Code   RO           32    .text.main          main.o
    0x00000516   0x00000516   0x00000002   PAD
    0x00000518   0x00000518   0x0000001a   Code   RO          102    .text.tBitmapClear  tbitmap.o
    0x00000532   0x00000532   0x00000002   PAD
    0x00000534   0x00000534   0x00000082   Code   RO          104    .text.tBitmapGetFirstSet  tbitmap.o
    0x000005b6   0x000005b6   0x00000002   PAD
    0x000005b8   0x000005b8   0x00000004   Code   RO           98    .text.tBitmapPosCount  tbitmap.o
    0x000005bc   0x000005bc   0x0000001a   Code   RO          100    .text.tBitmapSet    tbitmap.o
    0x000005d6   0x000005d6   0x00000002   PAD
    0x000005d8   0x000005d8   0x00000042   Code   RO          201    .text.tEventRemoveTask  tevent.o
    0x0000061a   0x0000061a   0x00000002   PAD
    0x0000061c   0x0000061c   0x00000088   Code   RO           57    .text.tInitApp      app.o
    0x000006a4   0x000006a4   0x0000002e   Code   RO          132    .text.tListAddLast  tlist.o
    0x000006d2   0x000006d2   0x00000002   PAD
    0x000006d4   0x000006d4   0x0000000c   Code   RO          118    .text.tListCount    tlist.o
    0x000006e0   0x000006e0   0x0000001e   Code   RO          120    .text.tListFirst    tlist.o
    0x000006fe   0x000006fe   0x00000002   PAD
    0x00000700   0x00000700   0x00000016   Code   RO          116    .text.tListInit     tlist.o
    0x00000716   0x00000716   0x00000002   PAD
    0x00000718   0x00000718   0x00000022   Code   RO          138    .text.tListRemove   tlist.o
    0x0000073a   0x0000073a   0x00000002   PAD
    0x0000073c   0x0000073c   0x00000036   Code   RO          134    .text.tListRemoveFirst  tlist.o
    0x00000772   0x00000772   0x00000002   PAD
    0x00000774   0x00000774   0x00000010   Code   RO          114    .text.tNodeInit     tlist.o
    0x00000784   0x00000784   0x00000056   Code   RO          180    .text.tSetSysTickPeriod  tcpu.o
    0x000007da   0x000007da   0x00000002   PAD
    0x000007dc   0x000007dc   0x00000034   Code   RO          172    .text.tTaskDelay    ttime.o
    0x00000810   0x00000810   0x00000010   Code   RO           20    .text.tTaskDelayedInit  main.o
    0x00000820   0x00000820   0x00000014   Code   RO           81    .text.tTaskEnterCritical  switch.o
    0x00000834   0x00000834   0x00000012   Code   RO           83    .text.tTaskExitCritical  switch.o
    0x00000846   0x00000846   0x00000002   PAD
    0x00000848   0x00000848   0x00000032   Code   RO            4    .text.tTaskHighestReady  main.o
    0x0000087a   0x0000087a   0x00000002   PAD
    0x0000087c   0x0000087c   0x00000122   Code   RO          147    .text.tTaskInit     ttask.o
    0x0000099e   0x0000099e   0x00000002   PAD
    0x000009a0   0x000009a0   0x0000002a   Code   RO           85    .text.tTaskRunFirst  switch.o
    0x000009ca   0x000009ca   0x00000002   PAD
    0x000009cc   0x000009cc   0x00000058   Code   RO           12    .text.tTaskSched    main.o
    0x00000a24   0x00000a24   0x00000040   Code   RO            6    .text.tTaskSchedInit  main.o
    0x00000a64   0x00000a64   0x00000034   Code   RO           14    .text.tTaskSchedRdy  main.o
    0x00000a98   0x00000a98   0x0000004e   Code   RO           16    .text.tTaskSchedUnRdy  main.o
    0x00000ae6   0x00000ae6   0x00000002   PAD
    0x00000ae8   0x00000ae8   0x00000010   Code   RO           87    .text.tTaskSwitch   switch.o
    0x00000af8   0x00000af8   0x000000f2   Code   RO           28    .text.tTaskSystemTickHandler  main.o
    0x00000bea   0x00000bea   0x00000002   PAD
    0x00000bec   0x00000bec   0x0000002e   Code   RO           22    .text.tTimeTaskWait  main.o
    0x00000c1a   0x00000c1a   0x00000002   PAD
    0x00000c1c   0x00000c1c   0x00000026   Code   RO           24    .text.tTimeTaskWakeUp  main.o
    0x00000c42   0x00000c42   0x00000002   PAD
    0x00000c44   0x00000c44   0x00000030   Code   RO           51    .text.task1Entry    app.o
    0x00000c74   0x00000c74   0x0000002a   Code   RO           53    .text.task2Entry    app.o
    0x00000c9e   0x00000c9e   0x00000002   PAD
    0x00000ca0   0x00000ca0   0x0000002a   Code   RO           55    .text.task3Entry    app.o
    0x00000cca   0x00000cca   0x0000000e   Code   RO          367    i.__scatterload_copy  mc_w.l(handlers.o)
    0x00000cd8   0x00000cd8   0x00000002   Code   RO          368    i.__scatterload_null  mc_w.l(handlers.o)
    0x00000cda   0x00000cda   0x0000000e   Code   RO          369    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x00000ce8   0x00000ce8   0x00000100   Data   RO          106    .rodata.tBitmapGetFirstSet.quickFindTable  tbitmap.o
    0x00000de8   0x00000de8   0x00000020   Data   RO          366    Region$$Table       anon$$obj.o


    Execution Region RW_NOINIT (Exec base: 0x20000000, Load base: 0x00000e08, Size: 0x00000000, Max: 0x0003f200, ABSOLUTE, UNINIT)

    **** No section assigned to this execution region ****


    Execution Region RW_RAM (Exec base: 0x20000000, Load base: 0x00000e08, Size: 0x000042cc, Max: 0x0003f200, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00000e08   0x00000004   Data   RW          339    .data.SystemCoreClock  system_armcm3.o
    0x20000004        -       0x00000004   Zero   RW           37    .bss.currentTask    main.o
    0x20000008        -       0x00001000   Zero   RW           41    .bss.idleTaskEnv    main.o
    0x20001008        -       0x00000004   Zero   RW           38    .bss.nextTask       main.o
    0x2000100c        -       0x00000001   Zero   RW           36    .bss.schedLockCount  main.o
    0x2000100d   0x00000e0c   0x00000003   PAD
    0x20001010        -       0x00000048   Zero   RW           62    .bss.tTask1         app.o
    0x20001058        -       0x00000048   Zero   RW           64    .bss.tTask2         app.o
    0x200010a0        -       0x00000048   Zero   RW           66    .bss.tTask3         app.o
    0x200010e8        -       0x0000000c   Zero   RW           39    .bss.tTaskDelayedList  main.o
    0x200010f4        -       0x00000048   Zero   RW           40    .bss.tTaskIdle      main.o
    0x2000113c        -       0x00001000   Zero   RW           63    .bss.task1Env       app.o
    0x2000213c        -       0x00000004   Zero   RW           59    .bss.task1Flag      app.o
    0x20002140        -       0x00001000   Zero   RW           65    .bss.task2Env       app.o
    0x20003140        -       0x00000004   Zero   RW           60    .bss.task2Flag      app.o
    0x20003144        -       0x00001000   Zero   RW           67    .bss.task3Env       app.o
    0x20004144        -       0x00000004   Zero   RW           61    .bss.task3Flag      app.o
    0x20004148        -       0x00000004   Zero   RW           34    .bss.taskPrioBitmap  main.o
    0x2000414c        -       0x00000180   Zero   RW           35    .bss.taskTable      main.o


    Execution Region ARM_LIB_HEAP (Exec base: 0x200042d0, Load base: 0x00000e0c, Size: 0x00000c00, Max: 0x00000c00, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x200042d0        -       0x00000c00   Zero   RW            1    ARM_LIB_HEAP.bss    anon$$obj.o


    Execution Region ARM_LIB_STACK (Exec base: 0x2003fe00, Load base: 0x00000e0c, Size: 0x00000200, Max: 0x00000200, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x2003fe00        -       0x00000200   Zero   RW            2    ARM_LIB_STACK.bss   anon$$obj.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       268          0          0          0      12516       2148   app.o
        48          8          0          0          0        324   cortex.o
       768          0          0          0       4577       4346   main.o
        16          0        960          0          0        803   startup_armcm3.o
        96          0          0          0          0       1484   switch.o
        38          0          0          4          0       1403   system_armcm3.o
       186          0        256          0          0       1326   tbitmap.o
       160          0          0          0          0       2693   tcpu.o
        66          0          0          0          0       3362   tevent.o
       214          0          0          0          0       2695   tlist.o
       290          0          0          0          0       3603   ttask.o
        52          0          0          0          0        536   ttime.o

    ----------------------------------------------------------------------
      2246          8       1248          4      20680      24723   Object Totals
         0          0         32          0       3584          0   (incl. Generated)
        44          0          0          0          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry4.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        48         10          0          0          0         68   init.o

    ----------------------------------------------------------------------
        98         18          0          0          0         68   Library Totals
         0          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

        98         18          0          0          0         68   mc_w.l

    ----------------------------------------------------------------------
        98         18          0          0          0         68   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      2344         26       1248          4      20680      24743   Grand Totals
      2344         26       1248          4      20680      24743   ELF Image Totals
      2344         26       1248          4          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 3592 (   3.51kB)
    Total RW  Size (RW Data + ZI Data)             20684 (  20.20kB)
    Total ROM Size (Code + RO Data + RW Data)       3596 (   3.51kB)

==============================================================================

