<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\myos.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\myos.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6220000: Last Updated: Thu Jul 17 20:25:54 2025
<BR><P>
<H3>Maximum Stack Usage =         96 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
task1Entry &rArr; tTaskDelay &rArr; tTaskSched &rArr; tTaskHighestReady &rArr; tBitmapGetFirstSet
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4]">BusFault_Handler</a> from startup_armcm3.o(.text.Default_Handler) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_armcm3.o(.text.Default_Handler) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_armcm3.o(.text.HardFault_Handler) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[a]">Interrupt0_Handler</a> from startup_armcm3.o(.text.Default_Handler) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[b]">Interrupt1_Handler</a> from startup_armcm3.o(.text.Default_Handler) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[c]">Interrupt2_Handler</a> from startup_armcm3.o(.text.Default_Handler) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[d]">Interrupt3_Handler</a> from startup_armcm3.o(.text.Default_Handler) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[e]">Interrupt4_Handler</a> from startup_armcm3.o(.text.Default_Handler) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[f]">Interrupt5_Handler</a> from startup_armcm3.o(.text.Default_Handler) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[10]">Interrupt6_Handler</a> from startup_armcm3.o(.text.Default_Handler) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[11]">Interrupt7_Handler</a> from startup_armcm3.o(.text.Default_Handler) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[12]">Interrupt8_Handler</a> from startup_armcm3.o(.text.Default_Handler) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[13]">Interrupt9_Handler</a> from startup_armcm3.o(.text.Default_Handler) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_armcm3.o(.text.Default_Handler) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_armcm3.o(.text.Default_Handler) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from cortex.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_armcm3.o(.text.Reset_Handler) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_armcm3.o(.text.Default_Handler) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from tcpu.o(.text.SysTick_Handler) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_armcm3.o(.text.Default_Handler) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[15]">idleTaskEntry</a> from main.o(.text.idleTaskEntry) referenced 2 times from main.o(.text.main)
 <LI><a href="#[14]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[16]">task1Entry</a> from app.o(.text.task1Entry) referenced 2 times from app.o(.text.tInitApp)
 <LI><a href="#[17]">task2Entry</a> from app.o(.text.task2Entry) referenced 2 times from app.o(.text.tInitApp)
 <LI><a href="#[18]">task3Entry</a> from app.o(.text.task3Entry) referenced 2 times from app.o(.text.tInitApp)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[19]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[3c]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry4.o(.ARM.Collect$$$$00000003))

<P><STRONG><a name="[1a]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1c]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3d]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[3e]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[3f]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[40]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[41]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, cortex.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>__scatterload</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[42]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_armcm3.o(.text.Default_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_armcm3.o(.text.Default_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>Default_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_armcm3.o(.text.Default_Handler), UNUSED)

<P><STRONG><a name="[a]"></a>Interrupt0_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_armcm3.o(.text.Default_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>Interrupt1_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_armcm3.o(.text.Default_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>Interrupt2_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_armcm3.o(.text.Default_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>Interrupt3_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_armcm3.o(.text.Default_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>Interrupt4_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_armcm3.o(.text.Default_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>Interrupt5_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_armcm3.o(.text.Default_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>Interrupt6_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_armcm3.o(.text.Default_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>Interrupt7_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_armcm3.o(.text.Default_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>Interrupt8_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_armcm3.o(.text.Default_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>Interrupt9_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_armcm3.o(.text.Default_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_armcm3.o(.text.Default_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_armcm3.o(.text.Default_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_armcm3.o(.text.Default_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_armcm3.o(.text.Default_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_armcm3.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_armcm3.o(.text.Reset_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, tcpu.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SysTick_Handler &rArr; tTaskSystemTickHandler &rArr; tTaskSched &rArr; tTaskHighestReady &rArr; tBitmapGetFirstSet
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSystemTickHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SystemInit</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, system_armcm3.o(.text.SystemInit))
<BR><BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[15]"></a>idleTaskEntry</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, main.o(.text.idleTaskEntry))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = idleTaskEntry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.main)
</UL>
<P><STRONG><a name="[14]"></a>main</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = main &rArr; tInitApp &rArr; tTaskInit &rArr; tTaskSchedRdy &rArr; tBitmapSet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskRunFirst
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskInit
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tInitApp
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskDelayedInit
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSchedInit
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskHighestReady
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[39]"></a>tBitmapClear</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, tbitmap.o(.text.tBitmapClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tBitmapClear
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSchedUnRdy
</UL>

<P><STRONG><a name="[25]"></a>tBitmapGetFirstSet</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, tbitmap.o(.text.tBitmapGetFirstSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tBitmapGetFirstSet
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tBitmapPosCount
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskHighestReady
</UL>

<P><STRONG><a name="[26]"></a>tBitmapPosCount</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tbitmap.o(.text.tBitmapPosCount))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tBitmapGetFirstSet
</UL>

<P><STRONG><a name="[37]"></a>tBitmapSet</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, tbitmap.o(.text.tBitmapSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tBitmapSet
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSchedRdy
</UL>

<P><STRONG><a name="[27]"></a>tEventRemoveTask</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, tevent.o(.text.tEventRemoveTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tEventRemoveTask &rArr; tListRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tListRemove
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskExitCritical
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSystemTickHandler
</UL>

<P><STRONG><a name="[21]"></a>tInitApp</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, app.o(.text.tInitApp))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = tInitApp &rArr; tTaskInit &rArr; tTaskSchedRdy &rArr; tBitmapSet
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskInit
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[36]"></a>tListAddLast</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, tlist.o(.text.tListAddLast))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tListAddLast
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSystemTickHandler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTimeTaskWait
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSchedRdy
</UL>

<P><STRONG><a name="[38]"></a>tListCount</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, tlist.o(.text.tListCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = tListCount
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSystemTickHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSchedUnRdy
</UL>

<P><STRONG><a name="[32]"></a>tListFirst</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, tlist.o(.text.tListFirst))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tListFirst
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskHighestReady
</UL>

<P><STRONG><a name="[31]"></a>tListInit</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, tlist.o(.text.tListInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = tListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskDelayedInit
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSchedInit
</UL>

<P><STRONG><a name="[29]"></a>tListRemove</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, tlist.o(.text.tListRemove))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tEventRemoveTask
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTimeTaskWakeUp
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSchedUnRdy
</UL>

<P><STRONG><a name="[3b]"></a>tListRemoveFirst</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, tlist.o(.text.tListRemoveFirst))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tListRemoveFirst
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSystemTickHandler
</UL>

<P><STRONG><a name="[33]"></a>tNodeInit</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, tlist.o(.text.tNodeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = tNodeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskInit
</UL>

<P><STRONG><a name="[2b]"></a>tSetSysTickPeriod</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, tcpu.o(.text.tSetSysTickPeriod))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tSetSysTickPeriod &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task1Entry
</UL>

<P><STRONG><a name="[2d]"></a>tTaskDelay</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, ttime.o(.text.tTaskDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = tTaskDelay &rArr; tTaskSched &rArr; tTaskHighestReady &rArr; tBitmapGetFirstSet
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTimeTaskWait
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSchedUnRdy
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSched
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskExitCritical
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3Entry
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task2Entry
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task1Entry
</UL>

<P><STRONG><a name="[20]"></a>tTaskDelayedInit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, main.o(.text.tTaskDelayedInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = tTaskDelayedInit &rArr; tListInit
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[28]"></a>tTaskEnterCritical</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, switch.o(.text.tTaskEnterCritical))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tTaskEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tEventRemoveTask
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSystemTickHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSched
</UL>

<P><STRONG><a name="[2a]"></a>tTaskExitCritical</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, switch.o(.text.tTaskExitCritical))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tTaskExitCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tEventRemoveTask
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSystemTickHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSched
</UL>

<P><STRONG><a name="[23]"></a>tTaskHighestReady</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, main.o(.text.tTaskHighestReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tTaskHighestReady &rArr; tBitmapGetFirstSet
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tListFirst
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tBitmapGetFirstSet
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSched
</UL>

<P><STRONG><a name="[22]"></a>tTaskInit</STRONG> (Thumb, 290 bytes, Stack size 24 bytes, ttask.o(.text.tTaskInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tTaskInit &rArr; tTaskSchedRdy &rArr; tBitmapSet
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tNodeInit
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSchedRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tInitApp
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24]"></a>tTaskRunFirst</STRONG> (Thumb, 42 bytes, Stack size 4 bytes, switch.o(.text.tTaskRunFirst))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = tTaskRunFirst
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[30]"></a>tTaskSched</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, main.o(.text.tTaskSched))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tTaskSched &rArr; tTaskHighestReady &rArr; tBitmapGetFirstSet
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSwitch
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskExitCritical
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskEnterCritical
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskHighestReady
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskDelay
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSystemTickHandler
</UL>

<P><STRONG><a name="[1f]"></a>tTaskSchedInit</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, main.o(.text.tTaskSchedInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = tTaskSchedInit &rArr; tListInit
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[34]"></a>tTaskSchedRdy</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, main.o(.text.tTaskSchedRdy))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tTaskSchedRdy &rArr; tBitmapSet
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tBitmapSet
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tListAddLast
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskInit
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSystemTickHandler
</UL>

<P><STRONG><a name="[2f]"></a>tTaskSchedUnRdy</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, main.o(.text.tTaskSchedUnRdy))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tTaskSchedUnRdy &rArr; tBitmapClear
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tBitmapClear
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tListCount
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskDelay
</UL>

<P><STRONG><a name="[35]"></a>tTaskSwitch</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, switch.o(.text.tTaskSwitch))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSched
</UL>

<P><STRONG><a name="[1e]"></a>tTaskSystemTickHandler</STRONG> (Thumb, 242 bytes, Stack size 32 bytes, main.o(.text.tTaskSystemTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = tTaskSystemTickHandler &rArr; tTaskSched &rArr; tTaskHighestReady &rArr; tBitmapGetFirstSet
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tListRemoveFirst
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tEventRemoveTask
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTimeTaskWakeUp
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tListCount
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tListAddLast
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSchedRdy
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSched
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskExitCritical
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[2e]"></a>tTimeTaskWait</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, main.o(.text.tTimeTaskWait))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tTimeTaskWait &rArr; tListAddLast
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tListAddLast
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskDelay
</UL>

<P><STRONG><a name="[3a]"></a>tTimeTaskWakeUp</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, main.o(.text.tTimeTaskWakeUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tTimeTaskWakeUp &rArr; tListRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskSystemTickHandler
</UL>

<P><STRONG><a name="[16]"></a>task1Entry</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, app.o(.text.task1Entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = task1Entry &rArr; tTaskDelay &rArr; tTaskSched &rArr; tTaskHighestReady &rArr; tBitmapGetFirstSet
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskDelay
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tSetSysTickPeriod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.text.tInitApp)
</UL>
<P><STRONG><a name="[17]"></a>task2Entry</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, app.o(.text.task2Entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = task2Entry &rArr; tTaskDelay &rArr; tTaskSched &rArr; tTaskHighestReady &rArr; tBitmapGetFirstSet
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskDelay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.text.tInitApp)
</UL>
<P><STRONG><a name="[18]"></a>task3Entry</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, app.o(.text.task3Entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = task3Entry &rArr; tTaskDelay &rArr; tTaskSched &rArr; tTaskHighestReady &rArr; tBitmapGetFirstSet
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tTaskDelay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.text.tInitApp)
</UL>
<P><STRONG><a name="[44]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[45]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[46]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[2c]"></a>__NVIC_SetPriority</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, tcpu.o(.text.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tSetSysTickPeriod
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
